{"ast":null,"code":"var hpack = require('../hpack');\nvar utils = hpack.utils;\nvar decoder = hpack.decoder;\nvar table = hpack.table;\nvar assert = utils.assert;\nvar inherits = require('inherits');\nvar Duplex = require('readable-stream').Duplex;\nfunction Decompressor(options) {\n  Duplex.call(this, {\n    readableObjectMode: true\n  });\n  this._decoder = decoder.create();\n  this._table = table.create(options.table);\n}\ninherits(Decompressor, Duplex);\nmodule.exports = Decompressor;\nDecompressor.create = function create(options) {\n  return new Decompressor(options);\n};\nDecompressor.prototype._read = function _read() {\n  // We only push!\n};\nDecompressor.prototype._write = function _write(data, enc, cb) {\n  this._decoder.push(data);\n  cb(null);\n};\nDecompressor.prototype.execute = function execute(cb) {\n  while (!this._decoder.isEmpty()) {\n    try {\n      this._execute();\n    } catch (err) {\n      if (cb) return done(err);else return this.emit('error', err);\n    }\n  }\n  if (cb) done(null);\n  function done(err) {\n    process.nextTick(function () {\n      cb(err);\n    });\n  }\n};\nDecompressor.prototype.updateTableSize = function updateTableSize(size) {\n  this._table.updateSize(size);\n};\nDecompressor.prototype._execute = function _execute() {\n  var isIndexed = this._decoder.decodeBit();\n  if (isIndexed) return this._processIndexed();\n  var isIncremental = this._decoder.decodeBit();\n  var neverIndex = 0;\n  if (!isIncremental) {\n    var isUpdate = this._decoder.decodeBit();\n    if (isUpdate) return this._processUpdate();\n    neverIndex = this._decoder.decodeBit();\n  }\n  this._processLiteral(isIncremental, neverIndex);\n};\nDecompressor.prototype._processIndexed = function _processIndexed() {\n  var index = this._decoder.decodeInt();\n  var lookup = this._table.lookup(index);\n  this.push({\n    name: lookup.name,\n    value: lookup.value,\n    neverIndex: false\n  });\n};\nDecompressor.prototype._processLiteral = function _processLiteral(inc, never) {\n  var index = this._decoder.decodeInt();\n  var name;\n  var nameSize;\n\n  // Literal header-name too\n  if (index === 0) {\n    name = this._decoder.decodeStr();\n    nameSize = name.length;\n    name = utils.stringify(name);\n  } else {\n    var lookup = this._table.lookup(index);\n    nameSize = lookup.nameSize;\n    name = lookup.name;\n  }\n  var value = this._decoder.decodeStr();\n  var valueSize = value.length;\n  value = utils.stringify(value);\n  if (inc) this._table.add(name, value, nameSize, valueSize);\n  this.push({\n    name: name,\n    value: value,\n    neverIndex: never !== 0\n  });\n};\nDecompressor.prototype._processUpdate = function _processUpdate() {\n  var size = this._decoder.decodeInt();\n  this.updateTableSize(size);\n};","map":{"version":3,"names":["hpack","require","utils","decoder","table","assert","inherits","Duplex","Decompressor","options","call","readableObjectMode","_decoder","create","_table","module","exports","prototype","_read","_write","data","enc","cb","push","execute","isEmpty","_execute","err","done","emit","process","nextTick","updateTableSize","size","updateSize","isIndexed","decodeBit","_processIndexed","isIncremental","neverIndex","isUpdate","_processUpdate","_processLiteral","index","decodeInt","lookup","name","value","inc","never","nameSize","decodeStr","length","stringify","valueSize","add"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/hpack.js/lib/hpack/decompressor.js"],"sourcesContent":["var hpack = require('../hpack');\nvar utils = hpack.utils;\nvar decoder = hpack.decoder;\nvar table = hpack.table;\nvar assert = utils.assert;\n\nvar inherits = require('inherits');\nvar Duplex = require('readable-stream').Duplex;\n\nfunction Decompressor(options) {\n  Duplex.call(this, {\n    readableObjectMode: true\n  });\n\n  this._decoder = decoder.create();\n  this._table = table.create(options.table);\n}\ninherits(Decompressor, Duplex);\nmodule.exports = Decompressor;\n\nDecompressor.create = function create(options) {\n  return new Decompressor(options);\n};\n\nDecompressor.prototype._read = function _read() {\n  // We only push!\n};\n\nDecompressor.prototype._write = function _write(data, enc, cb) {\n  this._decoder.push(data);\n\n  cb(null);\n};\n\nDecompressor.prototype.execute = function execute(cb) {\n  while (!this._decoder.isEmpty()) {\n    try {\n      this._execute();\n    } catch (err) {\n      if (cb)\n        return done(err);\n      else\n        return this.emit('error', err);\n    }\n  }\n\n  if (cb)\n    done(null);\n\n  function done(err) {\n    process.nextTick(function() {\n      cb(err);\n    });\n  }\n};\n\nDecompressor.prototype.updateTableSize = function updateTableSize(size) {\n  this._table.updateSize(size);\n};\n\nDecompressor.prototype._execute = function _execute() {\n  var isIndexed = this._decoder.decodeBit();\n  if (isIndexed)\n    return this._processIndexed();\n\n  var isIncremental = this._decoder.decodeBit();\n  var neverIndex = 0;\n  if (!isIncremental) {\n    var isUpdate = this._decoder.decodeBit();\n    if (isUpdate)\n      return this._processUpdate();\n\n    neverIndex = this._decoder.decodeBit();\n  }\n\n  this._processLiteral(isIncremental, neverIndex);\n};\n\nDecompressor.prototype._processIndexed = function _processIndexed() {\n  var index = this._decoder.decodeInt();\n\n  var lookup = this._table.lookup(index);\n  this.push({ name: lookup.name, value: lookup.value, neverIndex: false });\n};\n\nDecompressor.prototype._processLiteral = function _processLiteral(inc, never) {\n  var index = this._decoder.decodeInt();\n\n  var name;\n  var nameSize;\n\n  // Literal header-name too\n  if (index === 0) {\n    name = this._decoder.decodeStr();\n    nameSize = name.length;\n    name = utils.stringify(name);\n  } else {\n    var lookup = this._table.lookup(index);\n    nameSize = lookup.nameSize;\n    name = lookup.name;\n  }\n\n  var value = this._decoder.decodeStr();\n  var valueSize = value.length;\n  value = utils.stringify(value);\n\n  if (inc)\n    this._table.add(name, value, nameSize, valueSize);\n\n  this.push({ name: name, value: value, neverIndex: never !== 0});\n};\n\nDecompressor.prototype._processUpdate = function _processUpdate() {\n  var size = this._decoder.decodeInt();\n  this.updateTableSize(size);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}