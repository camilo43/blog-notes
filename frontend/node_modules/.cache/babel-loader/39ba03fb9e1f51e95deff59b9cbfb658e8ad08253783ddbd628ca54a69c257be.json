{"ast":null,"code":"'use strict';\n\nvar assert = require('assert');\nvar https = require('https');\nvar http = require('http');\nvar tls = require('tls');\nvar net = require('net');\nvar util = require('util');\nvar selectHose = require('select-hose');\nvar transport = require('spdy-transport');\nvar debug = require('debug')('spdy:server');\nvar EventEmitter = require('events').EventEmitter;\n\n// Node.js 0.8, 0.10 and 0.12 support\nObject.assign = process.versions.modules >= 46 ? Object.assign // eslint-disable-next-line\n: util._extend;\nvar spdy = require('../spdy');\nvar proto = {};\nfunction instantiate(base) {\n  function Server(options, handler) {\n    this._init(base, options, handler);\n  }\n  util.inherits(Server, base);\n  Server.create = function create(options, handler) {\n    return new Server(options, handler);\n  };\n  Object.keys(proto).forEach(function (key) {\n    Server.prototype[key] = proto[key];\n  });\n  return Server;\n}\nproto._init = function _init(base, options, handler) {\n  var state = {};\n  this._spdyState = state;\n  state.options = options.spdy || {};\n  var protocols = state.options.protocols || ['h2', 'spdy/3.1', 'spdy/3', 'spdy/2', 'http/1.1', 'http/1.0'];\n  var actualOptions = Object.assign({\n    NPNProtocols: protocols,\n    // Future-proof\n    ALPNProtocols: protocols\n  }, options);\n  state.secure = this instanceof tls.Server;\n  if (state.secure) {\n    base.call(this, actualOptions);\n  } else {\n    base.call(this);\n  }\n\n  // Support HEADERS+FIN\n  this.httpAllowHalfOpen = true;\n  var event = state.secure ? 'secureConnection' : 'connection';\n  state.listeners = this.listeners(event).slice();\n  assert(state.listeners.length > 0, 'Server does not have default listeners');\n  this.removeAllListeners(event);\n  if (state.options.plain) {\n    this.on(event, this._onPlainConnection);\n  } else {\n    this.on(event, this._onConnection);\n  }\n  if (handler) {\n    this.on('request', handler);\n  }\n  debug('server init secure=%d', state.secure);\n};\nproto._onConnection = function _onConnection(socket) {\n  var state = this._spdyState;\n  var protocol;\n  if (state.secure) {\n    protocol = socket.npnProtocol || socket.alpnProtocol;\n  }\n  this._handleConnection(socket, protocol);\n};\nproto._handleConnection = function _handleConnection(socket, protocol) {\n  var state = this._spdyState;\n  if (!protocol) {\n    protocol = state.options.protocol;\n  }\n  debug('incoming socket protocol=%j', protocol);\n\n  // No way we can do anything with the socket\n  if (!protocol || protocol === 'http/1.1' || protocol === 'http/1.0') {\n    debug('to default handler it goes');\n    return this._invokeDefault(socket);\n  }\n  socket.setNoDelay(true);\n  var connection = transport.connection.create(socket, Object.assign({\n    protocol: /spdy/.test(protocol) ? 'spdy' : 'http2',\n    isServer: true\n  }, state.options.connection || {}));\n\n  // Set version when we are certain\n  if (protocol === 'http2') {\n    connection.start(4);\n  } else if (protocol === 'spdy/3.1') {\n    connection.start(3.1);\n  } else if (protocol === 'spdy/3') {\n    connection.start(3);\n  } else if (protocol === 'spdy/2') {\n    connection.start(2);\n  }\n  connection.on('error', function () {\n    socket.destroy();\n  });\n  var self = this;\n  connection.on('stream', function (stream) {\n    self._onStream(stream);\n  });\n};\n\n// HTTP2 preface\nvar PREFACE = 'PRI * HTTP/2.0\\r\\n\\r\\nSM\\r\\n\\r\\n';\nvar PREFACE_BUFFER = Buffer.from(PREFACE);\nfunction hoseFilter(data, callback) {\n  if (data.length < 1) {\n    return callback(null, null);\n  }\n\n  // SPDY!\n  if (data[0] === 0x80) {\n    return callback(null, 'spdy');\n  }\n  var avail = Math.min(data.length, PREFACE_BUFFER.length);\n  for (var i = 0; i < avail; i++) {\n    if (data[i] !== PREFACE_BUFFER[i]) {\n      return callback(null, 'http/1.1');\n    }\n  }\n\n  // Not enough bytes to be sure about HTTP2\n  if (avail !== PREFACE_BUFFER.length) {\n    return callback(null, null);\n  }\n  return callback(null, 'h2');\n}\nproto._onPlainConnection = function _onPlainConnection(socket) {\n  var hose = selectHose.create(socket, {}, hoseFilter);\n  var self = this;\n  hose.on('select', function (protocol, socket) {\n    self._handleConnection(socket, protocol);\n  });\n  hose.on('error', function (err) {\n    debug('hose error %j', err.message);\n    socket.destroy();\n  });\n};\nproto._invokeDefault = function _invokeDefault(socket) {\n  var state = this._spdyState;\n  for (var i = 0; i < state.listeners.length; i++) {\n    state.listeners[i].call(this, socket);\n  }\n};\nproto._onStream = function _onStream(stream) {\n  var state = this._spdyState;\n  var handle = spdy.handle.create(this._spdyState.options, stream);\n  var socketOptions = {\n    handle: handle,\n    allowHalfOpen: true\n  };\n  var socket;\n  if (state.secure) {\n    socket = new spdy.Socket(stream.connection.socket, socketOptions);\n  } else {\n    socket = new net.Socket(socketOptions);\n  }\n\n  // This is needed because the `error` listener, added by the default\n  // `connection` listener, no longer has bound arguments. It relies instead\n  // on the `server` property of the socket. See https://github.com/nodejs/node/pull/11926\n  // for more details.\n  // This is only done for Node.js >= 4 in order to not break compatibility\n  // with older versions of the platform.\n  if (process.versions.modules >= 46) {\n    socket.server = this;\n  }\n  handle.assignSocket(socket);\n\n  // For v0.8\n  socket.readable = true;\n  socket.writable = true;\n  this._invokeDefault(socket);\n\n  // For v0.8, 0.10 and 0.12\n  if (process.versions.modules < 46) {\n    // eslint-disable-next-line\n    this.listenerCount = EventEmitter.listenerCount.bind(this);\n  }\n\n  // Add lazy `checkContinue` listener, otherwise `res.writeContinue` will be\n  // called before the response object was patched by us.\n  if (stream.headers.expect !== undefined && /100-continue/i.test(stream.headers.expect) && this.listenerCount('checkContinue') === 0) {\n    this.once('checkContinue', function (req, res) {\n      res.writeContinue();\n      this.emit('request', req, res);\n    });\n  }\n  handle.emitRequest();\n};\nproto.emit = function emit(event, req, res) {\n  if (event !== 'request' && event !== 'checkContinue') {\n    return EventEmitter.prototype.emit.apply(this, arguments);\n  }\n  if (!(req.socket._handle instanceof spdy.handle)) {\n    debug('not spdy req/res');\n    req.isSpdy = false;\n    req.spdyVersion = 1;\n    res.isSpdy = false;\n    res.spdyVersion = 1;\n    return EventEmitter.prototype.emit.apply(this, arguments);\n  }\n  var handle = req.connection._handle;\n  req.isSpdy = true;\n  req.spdyVersion = handle.getStream().connection.getVersion();\n  res.isSpdy = true;\n  res.spdyVersion = req.spdyVersion;\n  req.spdyStream = handle.getStream();\n  debug('override req/res');\n  res.writeHead = spdy.response.writeHead;\n  res.end = spdy.response.end;\n  res.push = spdy.response.push;\n  res.writeContinue = spdy.response.writeContinue;\n  res.spdyStream = handle.getStream();\n  res._req = req;\n  handle.assignRequest(req);\n  handle.assignResponse(res);\n  return EventEmitter.prototype.emit.apply(this, arguments);\n};\nexports.Server = instantiate(https.Server);\nexports.PlainServer = instantiate(http.Server);\nexports.create = function create(base, options, handler) {\n  if (typeof base === 'object') {\n    handler = options;\n    options = base;\n    base = null;\n  }\n  if (base) {\n    return instantiate(base).create(options, handler);\n  }\n  if (options.spdy && options.spdy.plain) {\n    return exports.PlainServer.create(options, handler);\n  } else {\n    return exports.Server.create(options, handler);\n  }\n};","map":{"version":3,"names":["assert","require","https","http","tls","net","util","selectHose","transport","debug","EventEmitter","Object","assign","process","versions","modules","_extend","spdy","proto","instantiate","base","Server","options","handler","_init","inherits","create","keys","forEach","key","prototype","state","_spdyState","protocols","actualOptions","NPNProtocols","ALPNProtocols","secure","call","httpAllowHalfOpen","event","listeners","slice","length","removeAllListeners","plain","on","_onPlainConnection","_onConnection","socket","protocol","npnProtocol","alpnProtocol","_handleConnection","_invokeDefault","setNoDelay","connection","test","isServer","start","destroy","self","stream","_onStream","PREFACE","PREFACE_BUFFER","Buffer","from","hoseFilter","data","callback","avail","Math","min","i","hose","err","message","handle","socketOptions","allowHalfOpen","Socket","server","assignSocket","readable","writable","listenerCount","bind","headers","expect","undefined","once","req","res","writeContinue","emit","emitRequest","apply","arguments","_handle","isSpdy","spdyVersion","getStream","getVersion","spdyStream","writeHead","response","end","push","_req","assignRequest","assignResponse","exports","PlainServer"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/spdy/lib/spdy/server.js"],"sourcesContent":["'use strict'\n\nvar assert = require('assert')\nvar https = require('https')\nvar http = require('http')\nvar tls = require('tls')\nvar net = require('net')\nvar util = require('util')\nvar selectHose = require('select-hose')\nvar transport = require('spdy-transport')\nvar debug = require('debug')('spdy:server')\nvar EventEmitter = require('events').EventEmitter\n\n// Node.js 0.8, 0.10 and 0.12 support\nObject.assign = process.versions.modules >= 46\n  ? Object.assign // eslint-disable-next-line\n  : util._extend\n\nvar spdy = require('../spdy')\n\nvar proto = {}\n\nfunction instantiate (base) {\n  function Server (options, handler) {\n    this._init(base, options, handler)\n  }\n  util.inherits(Server, base)\n\n  Server.create = function create (options, handler) {\n    return new Server(options, handler)\n  }\n\n  Object.keys(proto).forEach(function (key) {\n    Server.prototype[key] = proto[key]\n  })\n\n  return Server\n}\n\nproto._init = function _init (base, options, handler) {\n  var state = {}\n  this._spdyState = state\n\n  state.options = options.spdy || {}\n\n  var protocols = state.options.protocols || [\n    'h2',\n    'spdy/3.1', 'spdy/3', 'spdy/2',\n    'http/1.1', 'http/1.0'\n  ]\n\n  var actualOptions = Object.assign({\n    NPNProtocols: protocols,\n\n    // Future-proof\n    ALPNProtocols: protocols\n  }, options)\n\n  state.secure = this instanceof tls.Server\n\n  if (state.secure) {\n    base.call(this, actualOptions)\n  } else {\n    base.call(this)\n  }\n\n  // Support HEADERS+FIN\n  this.httpAllowHalfOpen = true\n\n  var event = state.secure ? 'secureConnection' : 'connection'\n\n  state.listeners = this.listeners(event).slice()\n  assert(state.listeners.length > 0, 'Server does not have default listeners')\n  this.removeAllListeners(event)\n\n  if (state.options.plain) {\n    this.on(event, this._onPlainConnection)\n  } else { this.on(event, this._onConnection) }\n\n  if (handler) {\n    this.on('request', handler)\n  }\n\n  debug('server init secure=%d', state.secure)\n}\n\nproto._onConnection = function _onConnection (socket) {\n  var state = this._spdyState\n\n  var protocol\n  if (state.secure) {\n    protocol = socket.npnProtocol || socket.alpnProtocol\n  }\n\n  this._handleConnection(socket, protocol)\n}\n\nproto._handleConnection = function _handleConnection (socket, protocol) {\n  var state = this._spdyState\n\n  if (!protocol) {\n    protocol = state.options.protocol\n  }\n\n  debug('incoming socket protocol=%j', protocol)\n\n  // No way we can do anything with the socket\n  if (!protocol || protocol === 'http/1.1' || protocol === 'http/1.0') {\n    debug('to default handler it goes')\n    return this._invokeDefault(socket)\n  }\n\n  socket.setNoDelay(true)\n\n  var connection = transport.connection.create(socket, Object.assign({\n    protocol: /spdy/.test(protocol) ? 'spdy' : 'http2',\n    isServer: true\n  }, state.options.connection || {}))\n\n  // Set version when we are certain\n  if (protocol === 'http2') { connection.start(4) } else if (protocol === 'spdy/3.1') {\n    connection.start(3.1)\n  } else if (protocol === 'spdy/3') { connection.start(3) } else if (protocol === 'spdy/2') {\n    connection.start(2)\n  }\n\n  connection.on('error', function () {\n    socket.destroy()\n  })\n\n  var self = this\n  connection.on('stream', function (stream) {\n    self._onStream(stream)\n  })\n}\n\n// HTTP2 preface\nvar PREFACE = 'PRI * HTTP/2.0\\r\\n\\r\\nSM\\r\\n\\r\\n'\nvar PREFACE_BUFFER = Buffer.from(PREFACE)\n\nfunction hoseFilter (data, callback) {\n  if (data.length < 1) {\n    return callback(null, null)\n  }\n\n  // SPDY!\n  if (data[0] === 0x80) { return callback(null, 'spdy') }\n\n  var avail = Math.min(data.length, PREFACE_BUFFER.length)\n  for (var i = 0; i < avail; i++) {\n    if (data[i] !== PREFACE_BUFFER[i]) { return callback(null, 'http/1.1') }\n  }\n\n  // Not enough bytes to be sure about HTTP2\n  if (avail !== PREFACE_BUFFER.length) { return callback(null, null) }\n\n  return callback(null, 'h2')\n}\n\nproto._onPlainConnection = function _onPlainConnection (socket) {\n  var hose = selectHose.create(socket, {}, hoseFilter)\n\n  var self = this\n  hose.on('select', function (protocol, socket) {\n    self._handleConnection(socket, protocol)\n  })\n\n  hose.on('error', function (err) {\n    debug('hose error %j', err.message)\n    socket.destroy()\n  })\n}\n\nproto._invokeDefault = function _invokeDefault (socket) {\n  var state = this._spdyState\n\n  for (var i = 0; i < state.listeners.length; i++) { state.listeners[i].call(this, socket) }\n}\n\nproto._onStream = function _onStream (stream) {\n  var state = this._spdyState\n\n  var handle = spdy.handle.create(this._spdyState.options, stream)\n\n  var socketOptions = {\n    handle: handle,\n    allowHalfOpen: true\n  }\n\n  var socket\n  if (state.secure) {\n    socket = new spdy.Socket(stream.connection.socket, socketOptions)\n  } else {\n    socket = new net.Socket(socketOptions)\n  }\n\n  // This is needed because the `error` listener, added by the default\n  // `connection` listener, no longer has bound arguments. It relies instead\n  // on the `server` property of the socket. See https://github.com/nodejs/node/pull/11926\n  // for more details.\n  // This is only done for Node.js >= 4 in order to not break compatibility\n  // with older versions of the platform.\n  if (process.versions.modules >= 46) { socket.server = this }\n\n  handle.assignSocket(socket)\n\n  // For v0.8\n  socket.readable = true\n  socket.writable = true\n\n  this._invokeDefault(socket)\n\n  // For v0.8, 0.10 and 0.12\n  if (process.versions.modules < 46) {\n    // eslint-disable-next-line\n    this.listenerCount = EventEmitter.listenerCount.bind(this)\n  }\n\n  // Add lazy `checkContinue` listener, otherwise `res.writeContinue` will be\n  // called before the response object was patched by us.\n  if (stream.headers.expect !== undefined &&\n      /100-continue/i.test(stream.headers.expect) &&\n      this.listenerCount('checkContinue') === 0) {\n    this.once('checkContinue', function (req, res) {\n      res.writeContinue()\n\n      this.emit('request', req, res)\n    })\n  }\n\n  handle.emitRequest()\n}\n\nproto.emit = function emit (event, req, res) {\n  if (event !== 'request' && event !== 'checkContinue') {\n    return EventEmitter.prototype.emit.apply(this, arguments)\n  }\n\n  if (!(req.socket._handle instanceof spdy.handle)) {\n    debug('not spdy req/res')\n    req.isSpdy = false\n    req.spdyVersion = 1\n    res.isSpdy = false\n    res.spdyVersion = 1\n    return EventEmitter.prototype.emit.apply(this, arguments)\n  }\n\n  var handle = req.connection._handle\n\n  req.isSpdy = true\n  req.spdyVersion = handle.getStream().connection.getVersion()\n  res.isSpdy = true\n  res.spdyVersion = req.spdyVersion\n  req.spdyStream = handle.getStream()\n\n  debug('override req/res')\n  res.writeHead = spdy.response.writeHead\n  res.end = spdy.response.end\n  res.push = spdy.response.push\n  res.writeContinue = spdy.response.writeContinue\n  res.spdyStream = handle.getStream()\n\n  res._req = req\n\n  handle.assignRequest(req)\n  handle.assignResponse(res)\n\n  return EventEmitter.prototype.emit.apply(this, arguments)\n}\n\nexports.Server = instantiate(https.Server)\nexports.PlainServer = instantiate(http.Server)\n\nexports.create = function create (base, options, handler) {\n  if (typeof base === 'object') {\n    handler = options\n    options = base\n    base = null\n  }\n\n  if (base) {\n    return instantiate(base).create(options, handler)\n  }\n\n  if (options.spdy && options.spdy.plain) { return exports.PlainServer.create(options, handler) } else {\n    return exports.Server.create(options, handler)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}