{"ast":null,"code":"'use strict';\n\nvar util = require('util');\nvar transport = require('../spdy-transport');\nvar debug = {\n  server: require('debug')('spdy:connection:server'),\n  client: require('debug')('spdy:connection:client')\n};\nvar EventEmitter = require('events').EventEmitter;\nvar Stream = transport.Stream;\nfunction Connection(socket, options) {\n  EventEmitter.call(this);\n  var state = {};\n  this._spdyState = state;\n\n  // NOTE: There's a big trick here. Connection is used as a `this` argument\n  // to the wrapped `connection` event listener.\n  // socket end doesn't necessarly mean connection drop\n  this.httpAllowHalfOpen = true;\n  state.timeout = new transport.utils.Timeout(this);\n\n  // Protocol info\n  state.protocol = transport.protocol[options.protocol];\n  state.version = null;\n  state.constants = state.protocol.constants;\n  state.pair = null;\n  state.isServer = options.isServer;\n\n  // Root of priority tree (i.e. stream id = 0)\n  state.priorityRoot = new transport.Priority({\n    defaultWeight: state.constants.DEFAULT_WEIGHT,\n    maxCount: transport.protocol.base.constants.MAX_PRIORITY_STREAMS\n  });\n\n  // Defaults\n  state.maxStreams = options.maxStreams || state.constants.MAX_CONCURRENT_STREAMS;\n  state.autoSpdy31 = options.protocol.name !== 'h2' && options.autoSpdy31;\n  state.acceptPush = options.acceptPush === undefined ? !state.isServer : options.acceptPush;\n  if (options.maxChunk === false) {\n    state.maxChunk = Infinity;\n  } else if (options.maxChunk === undefined) {\n    state.maxChunk = transport.protocol.base.constants.DEFAULT_MAX_CHUNK;\n  } else {\n    state.maxChunk = options.maxChunk;\n  }\n\n  // Connection-level flow control\n  var windowSize = options.windowSize || 1 << 20;\n  state.window = new transport.Window({\n    id: 0,\n    isServer: state.isServer,\n    recv: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  });\n\n  // It starts with DEFAULT_WINDOW, update must be sent to change it on client\n  state.window.recv.setMax(windowSize);\n\n  // Boilerplate for Stream constructor\n  state.streamWindow = new transport.Window({\n    id: -1,\n    isServer: state.isServer,\n    recv: {\n      size: windowSize,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  });\n\n  // Various state info\n  state.pool = state.protocol.compressionPool.create(options.headerCompression);\n  state.counters = {\n    push: 0,\n    stream: 0\n  };\n\n  // Init streams list\n  state.stream = {\n    map: {},\n    count: 0,\n    nextId: state.isServer ? 2 : 1,\n    lastId: {\n      both: 0,\n      received: 0\n    }\n  };\n  state.ping = {\n    nextId: state.isServer ? 2 : 1,\n    map: {}\n  };\n  state.goaway = false;\n\n  // Debug\n  state.debug = state.isServer ? debug.server : debug.client;\n\n  // X-Forwarded feature\n  state.xForward = null;\n\n  // Create parser and hole for framer\n  state.parser = state.protocol.parser.create({\n    // NOTE: needed to distinguish ping from ping ACK in SPDY\n    isServer: state.isServer,\n    window: state.window\n  });\n  state.framer = state.protocol.framer.create({\n    window: state.window,\n    timeout: state.timeout\n  });\n\n  // SPDY has PUSH enabled on servers\n  if (state.protocol.name === 'spdy') {\n    state.framer.enablePush(state.isServer);\n  }\n  if (!state.isServer) {\n    state.parser.skipPreface();\n  }\n  this.socket = socket;\n  this._init();\n}\nutil.inherits(Connection, EventEmitter);\nexports.Connection = Connection;\nConnection.create = function create(socket, options) {\n  return new Connection(socket, options);\n};\nConnection.prototype._init = function init() {\n  var self = this;\n  var state = this._spdyState;\n  var pool = state.pool;\n\n  // Initialize session window\n  state.window.recv.on('drain', function () {\n    self._onSessionWindowDrain();\n  });\n\n  // Initialize parser\n  state.parser.on('data', function (frame) {\n    self._handleFrame(frame);\n  });\n  state.parser.once('version', function (version) {\n    self._onVersion(version);\n  });\n\n  // Propagate parser errors\n  state.parser.on('error', function (err) {\n    self._onParserError(err);\n  });\n\n  // Propagate framer errors\n  state.framer.on('error', function (err) {\n    self.emit('error', err);\n  });\n  this.socket.pipe(state.parser);\n  state.framer.pipe(this.socket);\n\n  // Allow high-level api to catch socket errors\n  this.socket.on('error', function onSocketError(e) {\n    self.emit('error', e);\n  });\n  this.socket.once('close', function onclose(hadError) {\n    var err;\n    if (hadError) {\n      err = new Error('socket hang up');\n      err.code = 'ECONNRESET';\n    }\n    self.destroyStreams(err);\n    self.emit('close');\n    if (state.pair) {\n      pool.put(state.pair);\n    }\n    state.framer.resume();\n  });\n\n  // Reset timeout on close\n  this.once('close', function () {\n    self.setTimeout(0);\n  });\n  function _onWindowOverflow() {\n    self._onWindowOverflow();\n  }\n  state.window.recv.on('overflow', _onWindowOverflow);\n  state.window.send.on('overflow', _onWindowOverflow);\n\n  // Do not allow half-open connections\n  this.socket.allowHalfOpen = false;\n};\nConnection.prototype._onVersion = function _onVersion(version) {\n  var state = this._spdyState;\n  var prev = state.version;\n  var parser = state.parser;\n  var framer = state.framer;\n  var pool = state.pool;\n  state.version = version;\n  state.debug('id=0 version=%d', version);\n\n  // Ignore transition to 3.1\n  if (!prev) {\n    state.pair = pool.get(version);\n    parser.setCompression(state.pair);\n    framer.setCompression(state.pair);\n  }\n  framer.setVersion(version);\n  if (!state.isServer) {\n    framer.prefaceFrame();\n    if (state.xForward !== null) {\n      framer.xForwardedFor({\n        host: state.xForward\n      });\n    }\n  }\n\n  // Send preface+settings frame (once)\n  framer.settingsFrame({\n    max_header_list_size: state.constants.DEFAULT_MAX_HEADER_LIST_SIZE,\n    max_concurrent_streams: state.maxStreams,\n    enable_push: state.acceptPush ? 1 : 0,\n    initial_window_size: state.window.recv.max\n  });\n\n  // Update session window\n  if (state.version >= 3.1 || state.isServer && state.autoSpdy31) {\n    this._onSessionWindowDrain();\n  }\n  this.emit('version', version);\n};\nConnection.prototype._onParserError = function _onParserError(err) {\n  var state = this._spdyState;\n\n  // Prevent further errors\n  state.parser.kill();\n\n  // Send GOAWAY\n  if (err instanceof transport.protocol.base.utils.ProtocolError) {\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: err.code,\n      extra: err.message,\n      send: true\n    });\n  }\n  this.emit('error', err);\n};\nConnection.prototype._handleFrame = function _handleFrame(frame) {\n  var state = this._spdyState;\n  state.debug('id=0 frame', frame);\n  state.timeout.reset();\n\n  // For testing purposes\n  this.emit('frame', frame);\n  var stream;\n\n  // Session window update\n  if (frame.type === 'WINDOW_UPDATE' && frame.id === 0) {\n    if (state.version < 3.1 && state.autoSpdy31) {\n      state.debug('id=0 switch version to 3.1');\n      state.version = 3.1;\n      this.emit('version', 3.1);\n    }\n    state.window.send.update(frame.delta);\n    return;\n  }\n  if (state.isServer && frame.type === 'PUSH_PROMISE') {\n    state.debug('id=0 server PUSH_PROMISE');\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    });\n    return;\n  }\n  if (!stream && frame.id !== undefined) {\n    // Load created one\n    stream = state.stream.map[frame.id];\n\n    // Fail if not found\n    if (!stream && frame.type !== 'HEADERS' && frame.type !== 'PRIORITY' && frame.type !== 'RST') {\n      // Other side should destroy the stream upon receiving GOAWAY\n      if (this._isGoaway(frame.id)) {\n        return;\n      }\n      state.debug('id=0 stream=%d not found', frame.id);\n      state.framer.rstFrame({\n        id: frame.id,\n        code: 'INVALID_STREAM'\n      });\n      return;\n    }\n  }\n\n  // Create new stream\n  if (!stream && frame.type === 'HEADERS') {\n    this._handleHeaders(frame);\n    return;\n  }\n  if (stream) {\n    stream._handleFrame(frame);\n  } else if (frame.type === 'SETTINGS') {\n    this._handleSettings(frame.settings);\n  } else if (frame.type === 'ACK_SETTINGS') {\n    // TODO(indutny): handle it one day\n  } else if (frame.type === 'PING') {\n    this._handlePing(frame);\n  } else if (frame.type === 'GOAWAY') {\n    this._handleGoaway(frame);\n  } else if (frame.type === 'X_FORWARDED_FOR') {\n    // Set X-Forwarded-For only once\n    if (state.xForward === null) {\n      state.xForward = frame.host;\n    }\n  } else if (frame.type === 'PRIORITY') {\n    // TODO(indutny): handle this\n  } else {\n    state.debug('id=0 unknown frame type: %s', frame.type);\n  }\n};\nConnection.prototype._onWindowOverflow = function _onWindowOverflow() {\n  var state = this._spdyState;\n  state.debug('id=0 window overflow');\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'FLOW_CONTROL_ERROR',\n    send: true\n  });\n};\nConnection.prototype._isGoaway = function _isGoaway(id) {\n  var state = this._spdyState;\n  if (state.goaway !== false && state.goaway < id) {\n    return true;\n  }\n  return false;\n};\nConnection.prototype._getId = function _getId() {\n  var state = this._spdyState;\n  var id = state.stream.nextId;\n  state.stream.nextId += 2;\n  return id;\n};\nConnection.prototype._createStream = function _createStream(uri) {\n  var state = this._spdyState;\n  var id = uri.id;\n  if (id === undefined) {\n    id = this._getId();\n  }\n  var isGoaway = this._isGoaway(id);\n  if (uri.push && !state.acceptPush) {\n    state.debug('id=0 push disabled promisedId=%d', id);\n\n    // Fatal error\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    });\n    isGoaway = true;\n  }\n  var stream = new Stream(this, {\n    id: id,\n    request: uri.request !== false,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    parent: uri.parent,\n    readable: !isGoaway && uri.readable,\n    writable: !isGoaway && uri.writable\n  });\n  var self = this;\n\n  // Just an empty stream for API consistency\n  if (isGoaway) {\n    return stream;\n  }\n  state.stream.lastId.both = Math.max(state.stream.lastId.both, id);\n  state.debug('id=0 add stream=%d', stream.id);\n  state.stream.map[stream.id] = stream;\n  state.stream.count++;\n  state.counters.stream++;\n  if (stream.parent !== null) {\n    state.counters.push++;\n  }\n  stream.once('close', function () {\n    self._removeStream(stream);\n  });\n  return stream;\n};\nConnection.prototype._handleHeaders = function _handleHeaders(frame) {\n  var state = this._spdyState;\n\n  // Must be HEADERS frame after stream close\n  if (frame.id <= state.stream.lastId.received) {\n    return;\n  }\n\n  // Someone is using our ids!\n  if ((frame.id + state.stream.nextId) % 2 === 0) {\n    state.framer.rstFrame({\n      id: frame.id,\n      code: 'PROTOCOL_ERROR'\n    });\n    return;\n  }\n  var stream = this._createStream({\n    id: frame.id,\n    request: false,\n    method: frame.headers[':method'],\n    path: frame.headers[':path'],\n    host: frame.headers[':authority'],\n    priority: frame.priority,\n    headers: frame.headers,\n    writable: frame.writable\n  });\n\n  // GOAWAY\n  if (this._isGoaway(stream.id)) {\n    return;\n  }\n  state.stream.lastId.received = Math.max(state.stream.lastId.received, stream.id);\n\n  // TODO(indutny) handle stream limit\n  if (!this.emit('stream', stream)) {\n    // No listeners was set - abort the stream\n    stream.abort();\n    return;\n  }\n\n  // Create fake frame to simulate end of the data\n  if (frame.fin) {\n    stream._handleFrame({\n      type: 'FIN',\n      fin: true\n    });\n  }\n  return stream;\n};\nConnection.prototype._onSessionWindowDrain = function _onSessionWindowDrain() {\n  var state = this._spdyState;\n  if (state.version < 3.1 && !(state.isServer && state.autoSpdy31)) {\n    return;\n  }\n  var delta = state.window.recv.getDelta();\n  if (delta === 0) {\n    return;\n  }\n  state.debug('id=0 session window drain, update by %d', delta);\n  state.framer.windowUpdateFrame({\n    id: 0,\n    delta: delta\n  });\n  state.window.recv.update(delta);\n};\nConnection.prototype.start = function start(version) {\n  this._spdyState.parser.setVersion(version);\n};\n\n// Mostly for testing\nConnection.prototype.getVersion = function getVersion() {\n  return this._spdyState.version;\n};\nConnection.prototype._handleSettings = function _handleSettings(settings) {\n  var state = this._spdyState;\n  state.framer.ackSettingsFrame();\n  this._setDefaultWindow(settings);\n  if (settings.max_frame_size) {\n    state.framer.setMaxFrameSize(settings.max_frame_size);\n  }\n\n  // TODO(indutny): handle max_header_list_size\n  if (settings.header_table_size) {\n    try {\n      state.pair.compress.updateTableSize(settings.header_table_size);\n    } catch (e) {\n      this._goaway({\n        lastId: 0,\n        code: 'PROTOCOL_ERROR',\n        send: true\n      });\n      return;\n    }\n  }\n\n  // HTTP2 clients needs to enable PUSH streams explicitly\n  if (state.protocol.name !== 'spdy') {\n    if (settings.enable_push === undefined) {\n      state.framer.enablePush(state.isServer);\n    } else {\n      state.framer.enablePush(settings.enable_push === 1);\n    }\n  }\n\n  // TODO(indutny): handle max_concurrent_streams\n};\n\nConnection.prototype._setDefaultWindow = function _setDefaultWindow(settings) {\n  if (settings.initial_window_size === undefined) {\n    return;\n  }\n  var state = this._spdyState;\n\n  // Update defaults\n  var window = state.streamWindow;\n  window.send.setMax(settings.initial_window_size);\n\n  // Update existing streams\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id];\n    var window = stream._spdyState.window;\n    window.send.updateMax(settings.initial_window_size);\n  });\n};\nConnection.prototype._handlePing = function handlePing(frame) {\n  var self = this;\n  var state = this._spdyState;\n\n  // Handle incoming PING\n  if (!frame.ack) {\n    state.framer.pingFrame({\n      opaque: frame.opaque,\n      ack: true\n    });\n    self.emit('ping', frame.opaque);\n    return;\n  }\n\n  // Handle reply PING\n  var hex = frame.opaque.toString('hex');\n  if (!state.ping.map[hex]) {\n    return;\n  }\n  var ping = state.ping.map[hex];\n  delete state.ping.map[hex];\n  if (ping.cb) {\n    ping.cb(null);\n  }\n};\nConnection.prototype._handleGoaway = function handleGoaway(frame) {\n  this._goaway({\n    lastId: frame.lastId,\n    code: frame.code,\n    send: false\n  });\n};\nConnection.prototype.ping = function ping(callback) {\n  var state = this._spdyState;\n\n  // HTTP2 is using 8-byte opaque\n  var opaque = Buffer.alloc(state.constants.PING_OPAQUE_SIZE);\n  opaque.fill(0);\n  opaque.writeUInt32BE(state.ping.nextId, opaque.length - 4);\n  state.ping.nextId += 2;\n  state.ping.map[opaque.toString('hex')] = {\n    cb: callback\n  };\n  state.framer.pingFrame({\n    opaque: opaque,\n    ack: false\n  });\n};\nConnection.prototype.getCounter = function getCounter(name) {\n  return this._spdyState.counters[name];\n};\nConnection.prototype.reserveStream = function reserveStream(uri, callback) {\n  var stream = this._createStream(uri);\n\n  // GOAWAY\n  if (this._isGoaway(stream.id)) {\n    var err = new Error('Can\\'t send request after GOAWAY');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n  if (callback) {\n    process.nextTick(function () {\n      callback(null, stream);\n    });\n  }\n  return stream;\n};\nConnection.prototype.request = function request(uri, callback) {\n  var stream = this.reserveStream(uri, function (err) {\n    if (err) {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n      return;\n    }\n    if (stream._wasSent()) {\n      if (callback) {\n        callback(null, stream);\n      }\n      return;\n    }\n    stream.send(function (err) {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        } else {\n          return stream.emit('error', err);\n        }\n      }\n      if (callback) {\n        callback(null, stream);\n      }\n    });\n  });\n  return stream;\n};\nConnection.prototype._removeStream = function _removeStream(stream) {\n  var state = this._spdyState;\n  state.debug('id=0 remove stream=%d', stream.id);\n  delete state.stream.map[stream.id];\n  state.stream.count--;\n  if (state.stream.count === 0) {\n    this.emit('_streamDrain');\n  }\n};\nConnection.prototype._goaway = function _goaway(params) {\n  var state = this._spdyState;\n  var self = this;\n  state.goaway = params.lastId;\n  state.debug('id=0 goaway from=%d', state.goaway);\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id];\n\n    // Abort every stream started after GOAWAY\n    if (stream.id <= params.lastId) {\n      return;\n    }\n    stream.abort();\n    stream.emit('error', new Error('New stream after GOAWAY'));\n  });\n  function finish() {\n    // Destroy socket if there are no streams\n    if (state.stream.count === 0 || params.code !== 'OK') {\n      // No further frames should be processed\n      state.parser.kill();\n      process.nextTick(function () {\n        var err = new Error('Fatal error: ' + params.code);\n        self._onStreamDrain(err);\n      });\n      return;\n    }\n    self.on('_streamDrain', self._onStreamDrain);\n  }\n  if (params.send) {\n    // Make sure that GOAWAY frame is sent before dumping framer\n    state.framer.goawayFrame({\n      lastId: params.lastId,\n      code: params.code,\n      extra: params.extra\n    }, finish);\n  } else {\n    finish();\n  }\n};\nConnection.prototype._onStreamDrain = function _onStreamDrain(error) {\n  var state = this._spdyState;\n  state.debug('id=0 _onStreamDrain');\n  state.framer.dump();\n  state.framer.unpipe(this.socket);\n  state.framer.resume();\n  if (this.socket.destroySoon) {\n    this.socket.destroySoon();\n  }\n  this.emit('close', error);\n};\nConnection.prototype.end = function end(callback) {\n  var state = this._spdyState;\n  if (callback) {\n    this.once('close', callback);\n  }\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'OK',\n    send: true\n  });\n};\nConnection.prototype.destroyStreams = function destroyStreams(err) {\n  var state = this._spdyState;\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id];\n    stream.destroy();\n    if (err) {\n      stream.emit('error', err);\n    }\n  });\n};\nConnection.prototype.isServer = function isServer() {\n  return this._spdyState.isServer;\n};\nConnection.prototype.getXForwardedFor = function getXForwardFor() {\n  return this._spdyState.xForward;\n};\nConnection.prototype.sendXForwardedFor = function sendXForwardedFor(host) {\n  var state = this._spdyState;\n  if (state.version !== null) {\n    state.framer.xForwardedFor({\n      host: host\n    });\n  } else {\n    state.xForward = host;\n  }\n};\nConnection.prototype.pushPromise = function pushPromise(parent, uri, callback) {\n  var state = this._spdyState;\n  var stream = this._createStream({\n    request: false,\n    parent: parent,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    readable: false\n  });\n  var err;\n\n  // TODO(indutny): deduplicate this logic somehow\n  if (this._isGoaway(stream.id)) {\n    err = new Error('Can\\'t send PUSH_PROMISE after GOAWAY');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n  if (uri.push && !state.acceptPush) {\n    err = new Error('Can\\'t send PUSH_PROMISE, other side won\\'t accept it');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n  stream._sendPush(uri.status, uri.response, function (err) {\n    if (!callback) {\n      if (err) {\n        stream.emit('error', err);\n      }\n      return;\n    }\n    if (err) {\n      return callback(err);\n    }\n    callback(null, stream);\n  });\n  return stream;\n};\nConnection.prototype.setTimeout = function setTimeout(delay, callback) {\n  var state = this._spdyState;\n  state.timeout.set(delay, callback);\n};","map":{"version":3,"names":["util","require","transport","debug","server","client","EventEmitter","Stream","Connection","socket","options","call","state","_spdyState","httpAllowHalfOpen","timeout","utils","Timeout","protocol","version","constants","pair","isServer","priorityRoot","Priority","defaultWeight","DEFAULT_WEIGHT","maxCount","base","MAX_PRIORITY_STREAMS","maxStreams","MAX_CONCURRENT_STREAMS","autoSpdy31","name","acceptPush","undefined","maxChunk","Infinity","DEFAULT_MAX_CHUNK","windowSize","window","Window","id","recv","size","DEFAULT_WINDOW","max","MAX_INITIAL_WINDOW_SIZE","send","setMax","streamWindow","pool","compressionPool","create","headerCompression","counters","push","stream","map","count","nextId","lastId","both","received","ping","goaway","xForward","parser","framer","enablePush","skipPreface","_init","inherits","exports","prototype","init","self","on","_onSessionWindowDrain","frame","_handleFrame","once","_onVersion","err","_onParserError","emit","pipe","onSocketError","e","onclose","hadError","Error","code","destroyStreams","put","resume","setTimeout","_onWindowOverflow","allowHalfOpen","prev","get","setCompression","setVersion","prefaceFrame","xForwardedFor","host","settingsFrame","max_header_list_size","DEFAULT_MAX_HEADER_LIST_SIZE","max_concurrent_streams","enable_push","initial_window_size","kill","ProtocolError","_goaway","extra","message","reset","type","update","delta","_isGoaway","rstFrame","_handleHeaders","_handleSettings","settings","_handlePing","_handleGoaway","_getId","_createStream","uri","isGoaway","request","method","path","priority","headers","parent","readable","writable","Math","_removeStream","abort","fin","getDelta","windowUpdateFrame","start","getVersion","ackSettingsFrame","_setDefaultWindow","max_frame_size","setMaxFrameSize","header_table_size","compress","updateTableSize","Object","keys","forEach","updateMax","handlePing","ack","pingFrame","opaque","hex","toString","cb","handleGoaway","callback","Buffer","alloc","PING_OPAQUE_SIZE","fill","writeUInt32BE","length","getCounter","reserveStream","process","nextTick","_wasSent","params","finish","_onStreamDrain","goawayFrame","error","dump","unpipe","destroySoon","end","destroy","getXForwardedFor","getXForwardFor","sendXForwardedFor","pushPromise","_sendPush","status","response","delay","set"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/spdy-transport/lib/spdy-transport/connection.js"],"sourcesContent":["'use strict'\n\nvar util = require('util')\nvar transport = require('../spdy-transport')\n\nvar debug = {\n  server: require('debug')('spdy:connection:server'),\n  client: require('debug')('spdy:connection:client')\n}\nvar EventEmitter = require('events').EventEmitter\n\nvar Stream = transport.Stream\n\nfunction Connection (socket, options) {\n  EventEmitter.call(this)\n\n  var state = {}\n  this._spdyState = state\n\n  // NOTE: There's a big trick here. Connection is used as a `this` argument\n  // to the wrapped `connection` event listener.\n  // socket end doesn't necessarly mean connection drop\n  this.httpAllowHalfOpen = true\n\n  state.timeout = new transport.utils.Timeout(this)\n\n  // Protocol info\n  state.protocol = transport.protocol[options.protocol]\n  state.version = null\n  state.constants = state.protocol.constants\n  state.pair = null\n  state.isServer = options.isServer\n\n  // Root of priority tree (i.e. stream id = 0)\n  state.priorityRoot = new transport.Priority({\n    defaultWeight: state.constants.DEFAULT_WEIGHT,\n    maxCount: transport.protocol.base.constants.MAX_PRIORITY_STREAMS\n  })\n\n  // Defaults\n  state.maxStreams = options.maxStreams ||\n                     state.constants.MAX_CONCURRENT_STREAMS\n\n  state.autoSpdy31 = options.protocol.name !== 'h2' && options.autoSpdy31\n  state.acceptPush = options.acceptPush === undefined\n    ? !state.isServer\n    : options.acceptPush\n\n  if (options.maxChunk === false) { state.maxChunk = Infinity } else if (options.maxChunk === undefined) { state.maxChunk = transport.protocol.base.constants.DEFAULT_MAX_CHUNK } else {\n    state.maxChunk = options.maxChunk\n  }\n\n  // Connection-level flow control\n  var windowSize = options.windowSize || 1 << 20\n  state.window = new transport.Window({\n    id: 0,\n    isServer: state.isServer,\n    recv: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  })\n\n  // It starts with DEFAULT_WINDOW, update must be sent to change it on client\n  state.window.recv.setMax(windowSize)\n\n  // Boilerplate for Stream constructor\n  state.streamWindow = new transport.Window({\n    id: -1,\n    isServer: state.isServer,\n    recv: {\n      size: windowSize,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  })\n\n  // Various state info\n  state.pool = state.protocol.compressionPool.create(options.headerCompression)\n  state.counters = {\n    push: 0,\n    stream: 0\n  }\n\n  // Init streams list\n  state.stream = {\n    map: {},\n    count: 0,\n    nextId: state.isServer ? 2 : 1,\n    lastId: {\n      both: 0,\n      received: 0\n    }\n  }\n  state.ping = {\n    nextId: state.isServer ? 2 : 1,\n    map: {}\n  }\n  state.goaway = false\n\n  // Debug\n  state.debug = state.isServer ? debug.server : debug.client\n\n  // X-Forwarded feature\n  state.xForward = null\n\n  // Create parser and hole for framer\n  state.parser = state.protocol.parser.create({\n    // NOTE: needed to distinguish ping from ping ACK in SPDY\n    isServer: state.isServer,\n    window: state.window\n  })\n  state.framer = state.protocol.framer.create({\n    window: state.window,\n    timeout: state.timeout\n  })\n\n  // SPDY has PUSH enabled on servers\n  if (state.protocol.name === 'spdy') {\n    state.framer.enablePush(state.isServer)\n  }\n\n  if (!state.isServer) { state.parser.skipPreface() }\n\n  this.socket = socket\n\n  this._init()\n}\nutil.inherits(Connection, EventEmitter)\nexports.Connection = Connection\n\nConnection.create = function create (socket, options) {\n  return new Connection(socket, options)\n}\n\nConnection.prototype._init = function init () {\n  var self = this\n  var state = this._spdyState\n  var pool = state.pool\n\n  // Initialize session window\n  state.window.recv.on('drain', function () {\n    self._onSessionWindowDrain()\n  })\n\n  // Initialize parser\n  state.parser.on('data', function (frame) {\n    self._handleFrame(frame)\n  })\n  state.parser.once('version', function (version) {\n    self._onVersion(version)\n  })\n\n  // Propagate parser errors\n  state.parser.on('error', function (err) {\n    self._onParserError(err)\n  })\n\n  // Propagate framer errors\n  state.framer.on('error', function (err) {\n    self.emit('error', err)\n  })\n\n  this.socket.pipe(state.parser)\n  state.framer.pipe(this.socket)\n\n  // Allow high-level api to catch socket errors\n  this.socket.on('error', function onSocketError (e) {\n    self.emit('error', e)\n  })\n\n  this.socket.once('close', function onclose (hadError) {\n    var err\n    if (hadError) {\n      err = new Error('socket hang up')\n      err.code = 'ECONNRESET'\n    }\n\n    self.destroyStreams(err)\n    self.emit('close')\n\n    if (state.pair) {\n      pool.put(state.pair)\n    }\n\n    state.framer.resume()\n  })\n\n  // Reset timeout on close\n  this.once('close', function () {\n    self.setTimeout(0)\n  })\n\n  function _onWindowOverflow () {\n    self._onWindowOverflow()\n  }\n\n  state.window.recv.on('overflow', _onWindowOverflow)\n  state.window.send.on('overflow', _onWindowOverflow)\n\n  // Do not allow half-open connections\n  this.socket.allowHalfOpen = false\n}\n\nConnection.prototype._onVersion = function _onVersion (version) {\n  var state = this._spdyState\n  var prev = state.version\n  var parser = state.parser\n  var framer = state.framer\n  var pool = state.pool\n\n  state.version = version\n  state.debug('id=0 version=%d', version)\n\n  // Ignore transition to 3.1\n  if (!prev) {\n    state.pair = pool.get(version)\n    parser.setCompression(state.pair)\n    framer.setCompression(state.pair)\n  }\n  framer.setVersion(version)\n\n  if (!state.isServer) {\n    framer.prefaceFrame()\n    if (state.xForward !== null) {\n      framer.xForwardedFor({ host: state.xForward })\n    }\n  }\n\n  // Send preface+settings frame (once)\n  framer.settingsFrame({\n    max_header_list_size: state.constants.DEFAULT_MAX_HEADER_LIST_SIZE,\n    max_concurrent_streams: state.maxStreams,\n    enable_push: state.acceptPush ? 1 : 0,\n    initial_window_size: state.window.recv.max\n  })\n\n  // Update session window\n  if (state.version >= 3.1 || (state.isServer && state.autoSpdy31)) { this._onSessionWindowDrain() }\n\n  this.emit('version', version)\n}\n\nConnection.prototype._onParserError = function _onParserError (err) {\n  var state = this._spdyState\n\n  // Prevent further errors\n  state.parser.kill()\n\n  // Send GOAWAY\n  if (err instanceof transport.protocol.base.utils.ProtocolError) {\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: err.code,\n      extra: err.message,\n      send: true\n    })\n  }\n\n  this.emit('error', err)\n}\n\nConnection.prototype._handleFrame = function _handleFrame (frame) {\n  var state = this._spdyState\n\n  state.debug('id=0 frame', frame)\n  state.timeout.reset()\n\n  // For testing purposes\n  this.emit('frame', frame)\n\n  var stream\n\n  // Session window update\n  if (frame.type === 'WINDOW_UPDATE' && frame.id === 0) {\n    if (state.version < 3.1 && state.autoSpdy31) {\n      state.debug('id=0 switch version to 3.1')\n      state.version = 3.1\n      this.emit('version', 3.1)\n    }\n    state.window.send.update(frame.delta)\n    return\n  }\n\n  if (state.isServer && frame.type === 'PUSH_PROMISE') {\n    state.debug('id=0 server PUSH_PROMISE')\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    })\n    return\n  }\n\n  if (!stream && frame.id !== undefined) {\n    // Load created one\n    stream = state.stream.map[frame.id]\n\n    // Fail if not found\n    if (!stream &&\n        frame.type !== 'HEADERS' &&\n        frame.type !== 'PRIORITY' &&\n        frame.type !== 'RST') {\n      // Other side should destroy the stream upon receiving GOAWAY\n      if (this._isGoaway(frame.id)) { return }\n\n      state.debug('id=0 stream=%d not found', frame.id)\n      state.framer.rstFrame({ id: frame.id, code: 'INVALID_STREAM' })\n      return\n    }\n  }\n\n  // Create new stream\n  if (!stream && frame.type === 'HEADERS') {\n    this._handleHeaders(frame)\n    return\n  }\n\n  if (stream) {\n    stream._handleFrame(frame)\n  } else if (frame.type === 'SETTINGS') {\n    this._handleSettings(frame.settings)\n  } else if (frame.type === 'ACK_SETTINGS') {\n    // TODO(indutny): handle it one day\n  } else if (frame.type === 'PING') {\n    this._handlePing(frame)\n  } else if (frame.type === 'GOAWAY') {\n    this._handleGoaway(frame)\n  } else if (frame.type === 'X_FORWARDED_FOR') {\n    // Set X-Forwarded-For only once\n    if (state.xForward === null) {\n      state.xForward = frame.host\n    }\n  } else if (frame.type === 'PRIORITY') {\n    // TODO(indutny): handle this\n  } else {\n    state.debug('id=0 unknown frame type: %s', frame.type)\n  }\n}\n\nConnection.prototype._onWindowOverflow = function _onWindowOverflow () {\n  var state = this._spdyState\n  state.debug('id=0 window overflow')\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'FLOW_CONTROL_ERROR',\n    send: true\n  })\n}\n\nConnection.prototype._isGoaway = function _isGoaway (id) {\n  var state = this._spdyState\n  if (state.goaway !== false && state.goaway < id) { return true }\n  return false\n}\n\nConnection.prototype._getId = function _getId () {\n  var state = this._spdyState\n\n  var id = state.stream.nextId\n  state.stream.nextId += 2\n  return id\n}\n\nConnection.prototype._createStream = function _createStream (uri) {\n  var state = this._spdyState\n  var id = uri.id\n  if (id === undefined) { id = this._getId() }\n\n  var isGoaway = this._isGoaway(id)\n\n  if (uri.push && !state.acceptPush) {\n    state.debug('id=0 push disabled promisedId=%d', id)\n\n    // Fatal error\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    })\n    isGoaway = true\n  }\n\n  var stream = new Stream(this, {\n    id: id,\n    request: uri.request !== false,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    parent: uri.parent,\n    readable: !isGoaway && uri.readable,\n    writable: !isGoaway && uri.writable\n  })\n  var self = this\n\n  // Just an empty stream for API consistency\n  if (isGoaway) {\n    return stream\n  }\n\n  state.stream.lastId.both = Math.max(state.stream.lastId.both, id)\n\n  state.debug('id=0 add stream=%d', stream.id)\n  state.stream.map[stream.id] = stream\n  state.stream.count++\n  state.counters.stream++\n  if (stream.parent !== null) {\n    state.counters.push++\n  }\n\n  stream.once('close', function () {\n    self._removeStream(stream)\n  })\n\n  return stream\n}\n\nConnection.prototype._handleHeaders = function _handleHeaders (frame) {\n  var state = this._spdyState\n\n  // Must be HEADERS frame after stream close\n  if (frame.id <= state.stream.lastId.received) { return }\n\n  // Someone is using our ids!\n  if ((frame.id + state.stream.nextId) % 2 === 0) {\n    state.framer.rstFrame({ id: frame.id, code: 'PROTOCOL_ERROR' })\n    return\n  }\n\n  var stream = this._createStream({\n    id: frame.id,\n    request: false,\n    method: frame.headers[':method'],\n    path: frame.headers[':path'],\n    host: frame.headers[':authority'],\n    priority: frame.priority,\n    headers: frame.headers,\n    writable: frame.writable\n  })\n\n  // GOAWAY\n  if (this._isGoaway(stream.id)) {\n    return\n  }\n\n  state.stream.lastId.received = Math.max(\n    state.stream.lastId.received,\n    stream.id\n  )\n\n  // TODO(indutny) handle stream limit\n  if (!this.emit('stream', stream)) {\n    // No listeners was set - abort the stream\n    stream.abort()\n    return\n  }\n\n  // Create fake frame to simulate end of the data\n  if (frame.fin) {\n    stream._handleFrame({ type: 'FIN', fin: true })\n  }\n\n  return stream\n}\n\nConnection.prototype._onSessionWindowDrain = function _onSessionWindowDrain () {\n  var state = this._spdyState\n  if (state.version < 3.1 && !(state.isServer && state.autoSpdy31)) {\n    return\n  }\n\n  var delta = state.window.recv.getDelta()\n  if (delta === 0) {\n    return\n  }\n\n  state.debug('id=0 session window drain, update by %d', delta)\n\n  state.framer.windowUpdateFrame({\n    id: 0,\n    delta: delta\n  })\n  state.window.recv.update(delta)\n}\n\nConnection.prototype.start = function start (version) {\n  this._spdyState.parser.setVersion(version)\n}\n\n// Mostly for testing\nConnection.prototype.getVersion = function getVersion () {\n  return this._spdyState.version\n}\n\nConnection.prototype._handleSettings = function _handleSettings (settings) {\n  var state = this._spdyState\n\n  state.framer.ackSettingsFrame()\n\n  this._setDefaultWindow(settings)\n  if (settings.max_frame_size) { state.framer.setMaxFrameSize(settings.max_frame_size) }\n\n  // TODO(indutny): handle max_header_list_size\n  if (settings.header_table_size) {\n    try {\n      state.pair.compress.updateTableSize(settings.header_table_size)\n    } catch (e) {\n      this._goaway({\n        lastId: 0,\n        code: 'PROTOCOL_ERROR',\n        send: true\n      })\n      return\n    }\n  }\n\n  // HTTP2 clients needs to enable PUSH streams explicitly\n  if (state.protocol.name !== 'spdy') {\n    if (settings.enable_push === undefined) {\n      state.framer.enablePush(state.isServer)\n    } else {\n      state.framer.enablePush(settings.enable_push === 1)\n    }\n  }\n\n  // TODO(indutny): handle max_concurrent_streams\n}\n\nConnection.prototype._setDefaultWindow = function _setDefaultWindow (settings) {\n  if (settings.initial_window_size === undefined) {\n    return\n  }\n\n  var state = this._spdyState\n\n  // Update defaults\n  var window = state.streamWindow\n  window.send.setMax(settings.initial_window_size)\n\n  // Update existing streams\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n    var window = stream._spdyState.window\n\n    window.send.updateMax(settings.initial_window_size)\n  })\n}\n\nConnection.prototype._handlePing = function handlePing (frame) {\n  var self = this\n  var state = this._spdyState\n\n  // Handle incoming PING\n  if (!frame.ack) {\n    state.framer.pingFrame({\n      opaque: frame.opaque,\n      ack: true\n    })\n\n    self.emit('ping', frame.opaque)\n    return\n  }\n\n  // Handle reply PING\n  var hex = frame.opaque.toString('hex')\n  if (!state.ping.map[hex]) {\n    return\n  }\n  var ping = state.ping.map[hex]\n  delete state.ping.map[hex]\n\n  if (ping.cb) {\n    ping.cb(null)\n  }\n}\n\nConnection.prototype._handleGoaway = function handleGoaway (frame) {\n  this._goaway({\n    lastId: frame.lastId,\n    code: frame.code,\n    send: false\n  })\n}\n\nConnection.prototype.ping = function ping (callback) {\n  var state = this._spdyState\n\n  // HTTP2 is using 8-byte opaque\n  var opaque = Buffer.alloc(state.constants.PING_OPAQUE_SIZE)\n  opaque.fill(0)\n  opaque.writeUInt32BE(state.ping.nextId, opaque.length - 4)\n  state.ping.nextId += 2\n\n  state.ping.map[opaque.toString('hex')] = { cb: callback }\n  state.framer.pingFrame({\n    opaque: opaque,\n    ack: false\n  })\n}\n\nConnection.prototype.getCounter = function getCounter (name) {\n  return this._spdyState.counters[name]\n}\n\nConnection.prototype.reserveStream = function reserveStream (uri, callback) {\n  var stream = this._createStream(uri)\n\n  // GOAWAY\n  if (this._isGoaway(stream.id)) {\n    var err = new Error('Can\\'t send request after GOAWAY')\n    process.nextTick(function () {\n      if (callback) { callback(err) } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  if (callback) {\n    process.nextTick(function () {\n      callback(null, stream)\n    })\n  }\n\n  return stream\n}\n\nConnection.prototype.request = function request (uri, callback) {\n  var stream = this.reserveStream(uri, function (err) {\n    if (err) {\n      if (callback) {\n        callback(err)\n      } else {\n        stream.emit('error', err)\n      }\n      return\n    }\n\n    if (stream._wasSent()) {\n      if (callback) {\n        callback(null, stream)\n      }\n      return\n    }\n\n    stream.send(function (err) {\n      if (err) {\n        if (callback) { return callback(err) } else { return stream.emit('error', err) }\n      }\n\n      if (callback) {\n        callback(null, stream)\n      }\n    })\n  })\n\n  return stream\n}\n\nConnection.prototype._removeStream = function _removeStream (stream) {\n  var state = this._spdyState\n\n  state.debug('id=0 remove stream=%d', stream.id)\n  delete state.stream.map[stream.id]\n  state.stream.count--\n\n  if (state.stream.count === 0) {\n    this.emit('_streamDrain')\n  }\n}\n\nConnection.prototype._goaway = function _goaway (params) {\n  var state = this._spdyState\n  var self = this\n\n  state.goaway = params.lastId\n  state.debug('id=0 goaway from=%d', state.goaway)\n\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n\n    // Abort every stream started after GOAWAY\n    if (stream.id <= params.lastId) {\n      return\n    }\n\n    stream.abort()\n    stream.emit('error', new Error('New stream after GOAWAY'))\n  })\n\n  function finish () {\n    // Destroy socket if there are no streams\n    if (state.stream.count === 0 || params.code !== 'OK') {\n      // No further frames should be processed\n      state.parser.kill()\n\n      process.nextTick(function () {\n        var err = new Error('Fatal error: ' + params.code)\n        self._onStreamDrain(err)\n      })\n      return\n    }\n\n    self.on('_streamDrain', self._onStreamDrain)\n  }\n\n  if (params.send) {\n    // Make sure that GOAWAY frame is sent before dumping framer\n    state.framer.goawayFrame({\n      lastId: params.lastId,\n      code: params.code,\n      extra: params.extra\n    }, finish)\n  } else {\n    finish()\n  }\n}\n\nConnection.prototype._onStreamDrain = function _onStreamDrain (error) {\n  var state = this._spdyState\n\n  state.debug('id=0 _onStreamDrain')\n\n  state.framer.dump()\n  state.framer.unpipe(this.socket)\n  state.framer.resume()\n\n  if (this.socket.destroySoon) {\n    this.socket.destroySoon()\n  }\n  this.emit('close', error)\n}\n\nConnection.prototype.end = function end (callback) {\n  var state = this._spdyState\n\n  if (callback) {\n    this.once('close', callback)\n  }\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'OK',\n    send: true\n  })\n}\n\nConnection.prototype.destroyStreams = function destroyStreams (err) {\n  var state = this._spdyState\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n\n    stream.destroy()\n    if (err) {\n      stream.emit('error', err)\n    }\n  })\n}\n\nConnection.prototype.isServer = function isServer () {\n  return this._spdyState.isServer\n}\n\nConnection.prototype.getXForwardedFor = function getXForwardFor () {\n  return this._spdyState.xForward\n}\n\nConnection.prototype.sendXForwardedFor = function sendXForwardedFor (host) {\n  var state = this._spdyState\n  if (state.version !== null) {\n    state.framer.xForwardedFor({ host: host })\n  } else {\n    state.xForward = host\n  }\n}\n\nConnection.prototype.pushPromise = function pushPromise (parent, uri, callback) {\n  var state = this._spdyState\n\n  var stream = this._createStream({\n    request: false,\n    parent: parent,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    readable: false\n  })\n\n  var err\n\n  // TODO(indutny): deduplicate this logic somehow\n  if (this._isGoaway(stream.id)) {\n    err = new Error('Can\\'t send PUSH_PROMISE after GOAWAY')\n\n    process.nextTick(function () {\n      if (callback) {\n        callback(err)\n      } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  if (uri.push && !state.acceptPush) {\n    err = new Error(\n      'Can\\'t send PUSH_PROMISE, other side won\\'t accept it')\n    process.nextTick(function () {\n      if (callback) { callback(err) } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  stream._sendPush(uri.status, uri.response, function (err) {\n    if (!callback) {\n      if (err) {\n        stream.emit('error', err)\n      }\n      return\n    }\n\n    if (err) { return callback(err) }\n    callback(null, stream)\n  })\n\n  return stream\n}\n\nConnection.prototype.setTimeout = function setTimeout (delay, callback) {\n  var state = this._spdyState\n\n  state.timeout.set(delay, callback)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}