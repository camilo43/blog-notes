{"ast":null,"code":"'use strict';\n\nconst styles = require('./styles');\nconst lastModifiedToString = require('./last-modified-to-string');\nconst permsToString = require('./perms-to-string');\nconst sizeToString = require('./size-to-string');\nconst sortFiles = require('./sort-files');\nconst fs = require('fs');\nconst path = require('path');\nconst he = require('he');\nconst etag = require('../etag');\nconst url = require('url');\nconst status = require('../status-handlers');\nconst supportedIcons = styles.icons;\nconst css = styles.css;\nmodule.exports = opts => {\n  // opts are parsed by opts.js, defaults already applied\n  const cache = opts.cache;\n  const root = path.resolve(opts.root);\n  const baseDir = opts.baseDir;\n  const humanReadable = opts.humanReadable;\n  const hidePermissions = opts.hidePermissions;\n  const handleError = opts.handleError;\n  const showDotfiles = opts.showDotfiles;\n  const si = opts.si;\n  const weakEtags = opts.weakEtags;\n  return function middleware(req, res, next) {\n    // Figure out the path for the file from the given url\n    const parsed = url.parse(req.url);\n    const pathname = decodeURIComponent(parsed.pathname);\n    const dir = path.normalize(path.join(root, path.relative(path.join('/', baseDir), pathname)));\n    fs.stat(dir, (statErr, stat) => {\n      if (statErr) {\n        if (handleError) {\n          status[500](res, next, {\n            error: statErr\n          });\n        } else {\n          next();\n        }\n        return;\n      }\n\n      // files are the listing of dir\n      fs.readdir(dir, (readErr, _files) => {\n        let files = _files;\n        if (readErr) {\n          if (handleError) {\n            status[500](res, next, {\n              error: readErr\n            });\n          } else {\n            next();\n          }\n          return;\n        }\n\n        // Optionally exclude dotfiles from directory listing.\n        if (!showDotfiles) {\n          files = files.filter(filename => filename.slice(0, 1) !== '.');\n        }\n        res.setHeader('content-type', 'text/html');\n        res.setHeader('etag', etag(stat, weakEtags));\n        res.setHeader('last-modified', new Date(stat.mtime).toUTCString());\n        res.setHeader('cache-control', cache);\n        function render(dirs, renderFiles, lolwuts) {\n          // each entry in the array is a [name, stat] tuple\n\n          let html = `${['<!doctype html>', '<html>', '  <head>', '    <meta charset=\"utf-8\">', '    <meta name=\"viewport\" content=\"width=device-width\">', `    <title>Index of ${he.encode(pathname)}</title>`, `    <style type=\"text/css\">${css}</style>`, '  </head>', '  <body>', `<h1>Index of ${he.encode(pathname)}</h1>`].join('\\n')}\\n`;\n          html += '<table>';\n          const failed = false;\n          const writeRow = file => {\n            // render a row given a [name, stat] tuple\n            const isDir = file[1].isDirectory && file[1].isDirectory();\n            let href = `./${encodeURIComponent(file[0])}`;\n\n            // append trailing slash and query for dir entry\n            if (isDir) {\n              href += `/${he.encode(parsed.search ? parsed.search : '')}`;\n            }\n            const displayName = he.encode(file[0]) + (isDir ? '/' : '');\n            const ext = file[0].split('.').pop();\n            const classForNonDir = supportedIcons[ext] ? ext : '_page';\n            const iconClass = `icon-${isDir ? '_blank' : classForNonDir}`;\n\n            // TODO: use stylessheets?\n            html += `${'<tr>' + '<td><i class=\"icon '}${iconClass}\"></i></td>`;\n            if (!hidePermissions) {\n              html += `<td class=\"perms\"><code>(${permsToString(file[1])})</code></td>`;\n            }\n            html += `<td class=\"last-modified\">${lastModifiedToString(file[1])}</td>` + `<td class=\"file-size\"><code>${sizeToString(file[1], humanReadable, si)}</code></td>` + `<td class=\"display-name\"><a href=\"${href}\">${displayName}</a></td>` + '</tr>\\n';\n          };\n          dirs.sort((a, b) => a[0].toString().localeCompare(b[0].toString())).forEach(writeRow);\n          renderFiles.sort((a, b) => a.toString().localeCompare(b.toString())).forEach(writeRow);\n          lolwuts.sort((a, b) => a[0].toString().localeCompare(b[0].toString())).forEach(writeRow);\n          html += '</table>\\n';\n          html += `<br><address>Node.js ${process.version}/ <a href=\"https://github.com/http-party/http-server\">http-server</a> ` + `server running @ ${he.encode(req.headers.host || '')}</address>\\n` + '</body></html>';\n          if (!failed) {\n            res.writeHead(200, {\n              'Content-Type': 'text/html'\n            });\n            res.end(html);\n          }\n        }\n        sortFiles(dir, files, (lolwuts, dirs, sortedFiles) => {\n          // It's possible to get stat errors for all sorts of reasons here.\n          // Unfortunately, our two choices are to either bail completely,\n          // or just truck along as though everything's cool. In this case,\n          // I decided to just tack them on as \"??!?\" items along with dirs\n          // and files.\n          //\n          // Whatever.\n\n          // if it makes sense to, add a .. link\n          if (path.resolve(dir, '..').slice(0, root.length) === root) {\n            fs.stat(path.join(dir, '..'), (err, s) => {\n              if (err) {\n                if (handleError) {\n                  status[500](res, next, {\n                    error: err\n                  });\n                } else {\n                  next();\n                }\n                return;\n              }\n              dirs.unshift(['..', s]);\n              render(dirs, sortedFiles, lolwuts);\n            });\n          } else {\n            render(dirs, sortedFiles, lolwuts);\n          }\n        });\n      });\n    });\n  };\n};","map":{"version":3,"names":["styles","require","lastModifiedToString","permsToString","sizeToString","sortFiles","fs","path","he","etag","url","status","supportedIcons","icons","css","module","exports","opts","cache","root","resolve","baseDir","humanReadable","hidePermissions","handleError","showDotfiles","si","weakEtags","middleware","req","res","next","parsed","parse","pathname","decodeURIComponent","dir","normalize","join","relative","stat","statErr","error","readdir","readErr","_files","files","filter","filename","slice","setHeader","Date","mtime","toUTCString","render","dirs","renderFiles","lolwuts","html","encode","failed","writeRow","file","isDir","isDirectory","href","encodeURIComponent","search","displayName","ext","split","pop","classForNonDir","iconClass","sort","a","b","toString","localeCompare","forEach","process","version","headers","host","writeHead","end","sortedFiles","length","err","s","unshift"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/http-server/lib/core/show-dir/index.js"],"sourcesContent":["'use strict';\n\nconst styles = require('./styles');\nconst lastModifiedToString = require('./last-modified-to-string');\nconst permsToString = require('./perms-to-string');\nconst sizeToString = require('./size-to-string');\nconst sortFiles = require('./sort-files');\nconst fs = require('fs');\nconst path = require('path');\nconst he = require('he');\nconst etag = require('../etag');\nconst url = require('url');\nconst status = require('../status-handlers');\n\nconst supportedIcons = styles.icons;\nconst css = styles.css;\n\nmodule.exports = (opts) => {\n  // opts are parsed by opts.js, defaults already applied\n  const cache = opts.cache;\n  const root = path.resolve(opts.root);\n  const baseDir = opts.baseDir;\n  const humanReadable = opts.humanReadable;\n  const hidePermissions = opts.hidePermissions;\n  const handleError = opts.handleError;\n  const showDotfiles = opts.showDotfiles;\n  const si = opts.si;\n  const weakEtags = opts.weakEtags;\n\n  return function middleware(req, res, next) {\n    // Figure out the path for the file from the given url\n    const parsed = url.parse(req.url);\n    const pathname = decodeURIComponent(parsed.pathname);\n    const dir = path.normalize(\n      path.join(\n        root,\n        path.relative(\n          path.join('/', baseDir),\n          pathname\n        )\n      )\n    );\n\n    fs.stat(dir, (statErr, stat) => {\n      if (statErr) {\n        if (handleError) {\n          status[500](res, next, { error: statErr });\n        } else {\n          next();\n        }\n        return;\n      }\n\n      // files are the listing of dir\n      fs.readdir(dir, (readErr, _files) => {\n        let files = _files;\n\n        if (readErr) {\n          if (handleError) {\n            status[500](res, next, { error: readErr });\n          } else {\n            next();\n          }\n          return;\n        }\n\n        // Optionally exclude dotfiles from directory listing.\n        if (!showDotfiles) {\n          files = files.filter(filename => filename.slice(0, 1) !== '.');\n        }\n\n        res.setHeader('content-type', 'text/html');\n        res.setHeader('etag', etag(stat, weakEtags));\n        res.setHeader('last-modified', (new Date(stat.mtime)).toUTCString());\n        res.setHeader('cache-control', cache);\n\n        function render(dirs, renderFiles, lolwuts) {\n          // each entry in the array is a [name, stat] tuple\n\n          let html = `${[\n            '<!doctype html>',\n            '<html>',\n            '  <head>',\n            '    <meta charset=\"utf-8\">',\n            '    <meta name=\"viewport\" content=\"width=device-width\">',\n            `    <title>Index of ${he.encode(pathname)}</title>`,\n            `    <style type=\"text/css\">${css}</style>`,\n            '  </head>',\n            '  <body>',\n            `<h1>Index of ${he.encode(pathname)}</h1>`,\n          ].join('\\n')}\\n`;\n\n          html += '<table>';\n\n          const failed = false;\n          const writeRow = (file) => {\n            // render a row given a [name, stat] tuple\n            const isDir = file[1].isDirectory && file[1].isDirectory();\n            let href = `./${encodeURIComponent(file[0])}`;\n\n            // append trailing slash and query for dir entry\n            if (isDir) {\n              href += `/${he.encode((parsed.search) ? parsed.search : '')}`;\n            }\n\n            const displayName = he.encode(file[0]) + ((isDir) ? '/' : '');\n            const ext = file[0].split('.').pop();\n            const classForNonDir = supportedIcons[ext] ? ext : '_page';\n            const iconClass = `icon-${isDir ? '_blank' : classForNonDir}`;\n\n            // TODO: use stylessheets?\n            html += `${'<tr>' +\n              '<td><i class=\"icon '}${iconClass}\"></i></td>`;\n            if (!hidePermissions) {\n              html += `<td class=\"perms\"><code>(${permsToString(file[1])})</code></td>`;\n            }\n            html +=\n              `<td class=\"last-modified\">${lastModifiedToString(file[1])}</td>` +\n              `<td class=\"file-size\"><code>${sizeToString(file[1], humanReadable, si)}</code></td>` +\n              `<td class=\"display-name\"><a href=\"${href}\">${displayName}</a></td>` +\n              '</tr>\\n';\n          };\n\n          dirs.sort((a, b) => a[0].toString().localeCompare(b[0].toString())).forEach(writeRow);\n          renderFiles.sort((a, b) => a.toString().localeCompare(b.toString())).forEach(writeRow);\n          lolwuts.sort((a, b) => a[0].toString().localeCompare(b[0].toString())).forEach(writeRow);\n\n          html += '</table>\\n';\n          html += `<br><address>Node.js ${\n            process.version\n            }/ <a href=\"https://github.com/http-party/http-server\">http-server</a> ` +\n            `server running @ ${\n            he.encode(req.headers.host || '')}</address>\\n` +\n            '</body></html>'\n          ;\n\n          if (!failed) {\n            res.writeHead(200, { 'Content-Type': 'text/html' });\n            res.end(html);\n          }\n        }\n\n        sortFiles(dir, files, (lolwuts, dirs, sortedFiles) => {\n          // It's possible to get stat errors for all sorts of reasons here.\n          // Unfortunately, our two choices are to either bail completely,\n          // or just truck along as though everything's cool. In this case,\n          // I decided to just tack them on as \"??!?\" items along with dirs\n          // and files.\n          //\n          // Whatever.\n\n          // if it makes sense to, add a .. link\n          if (path.resolve(dir, '..').slice(0, root.length) === root) {\n            fs.stat(path.join(dir, '..'), (err, s) => {\n              if (err) {\n                if (handleError) {\n                  status[500](res, next, { error: err });\n                } else {\n                  next();\n                }\n                return;\n              }\n              dirs.unshift(['..', s]);\n              render(dirs, sortedFiles, lolwuts);\n            });\n          } else {\n            render(dirs, sortedFiles, lolwuts);\n          }\n        });\n      });\n    });\n  };\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACjE,MAAME,aAAa,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAClD,MAAMG,YAAY,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAChD,MAAMI,SAAS,GAAGJ,OAAO,CAAC,cAAc,CAAC;AACzC,MAAMK,EAAE,GAAGL,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMM,IAAI,GAAGN,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMO,EAAE,GAAGP,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMQ,IAAI,GAAGR,OAAO,CAAC,SAAS,CAAC;AAC/B,MAAMS,GAAG,GAAGT,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAMU,MAAM,GAAGV,OAAO,CAAC,oBAAoB,CAAC;AAE5C,MAAMW,cAAc,GAAGZ,MAAM,CAACa,KAAK;AACnC,MAAMC,GAAG,GAAGd,MAAM,CAACc,GAAG;AAEtBC,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB;EACA,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACxB,MAAMC,IAAI,GAAGZ,IAAI,CAACa,OAAO,CAACH,IAAI,CAACE,IAAI,CAAC;EACpC,MAAME,OAAO,GAAGJ,IAAI,CAACI,OAAO;EAC5B,MAAMC,aAAa,GAAGL,IAAI,CAACK,aAAa;EACxC,MAAMC,eAAe,GAAGN,IAAI,CAACM,eAAe;EAC5C,MAAMC,WAAW,GAAGP,IAAI,CAACO,WAAW;EACpC,MAAMC,YAAY,GAAGR,IAAI,CAACQ,YAAY;EACtC,MAAMC,EAAE,GAAGT,IAAI,CAACS,EAAE;EAClB,MAAMC,SAAS,GAAGV,IAAI,CAACU,SAAS;EAEhC,OAAO,SAASC,UAAU,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;IACzC;IACA,MAAMC,MAAM,GAAGtB,GAAG,CAACuB,KAAK,CAACJ,GAAG,CAACnB,GAAG,CAAC;IACjC,MAAMwB,QAAQ,GAAGC,kBAAkB,CAACH,MAAM,CAACE,QAAQ,CAAC;IACpD,MAAME,GAAG,GAAG7B,IAAI,CAAC8B,SAAS,CACxB9B,IAAI,CAAC+B,IAAI,CACPnB,IAAI,EACJZ,IAAI,CAACgC,QAAQ,CACXhC,IAAI,CAAC+B,IAAI,CAAC,GAAG,EAAEjB,OAAO,CAAC,EACvBa,QAAQ,CACT,CACF,CACF;IAED5B,EAAE,CAACkC,IAAI,CAACJ,GAAG,EAAE,CAACK,OAAO,EAAED,IAAI,KAAK;MAC9B,IAAIC,OAAO,EAAE;QACX,IAAIjB,WAAW,EAAE;UACfb,MAAM,CAAC,GAAG,CAAC,CAACmB,GAAG,EAAEC,IAAI,EAAE;YAAEW,KAAK,EAAED;UAAQ,CAAC,CAAC;QAC5C,CAAC,MAAM;UACLV,IAAI,EAAE;QACR;QACA;MACF;;MAEA;MACAzB,EAAE,CAACqC,OAAO,CAACP,GAAG,EAAE,CAACQ,OAAO,EAAEC,MAAM,KAAK;QACnC,IAAIC,KAAK,GAAGD,MAAM;QAElB,IAAID,OAAO,EAAE;UACX,IAAIpB,WAAW,EAAE;YACfb,MAAM,CAAC,GAAG,CAAC,CAACmB,GAAG,EAAEC,IAAI,EAAE;cAAEW,KAAK,EAAEE;YAAQ,CAAC,CAAC;UAC5C,CAAC,MAAM;YACLb,IAAI,EAAE;UACR;UACA;QACF;;QAEA;QACA,IAAI,CAACN,YAAY,EAAE;UACjBqB,KAAK,GAAGA,KAAK,CAACC,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC;QAChE;QAEAnB,GAAG,CAACoB,SAAS,CAAC,cAAc,EAAE,WAAW,CAAC;QAC1CpB,GAAG,CAACoB,SAAS,CAAC,MAAM,EAAEzC,IAAI,CAAC+B,IAAI,EAAEb,SAAS,CAAC,CAAC;QAC5CG,GAAG,CAACoB,SAAS,CAAC,eAAe,EAAG,IAAIC,IAAI,CAACX,IAAI,CAACY,KAAK,CAAC,CAAEC,WAAW,EAAE,CAAC;QACpEvB,GAAG,CAACoB,SAAS,CAAC,eAAe,EAAEhC,KAAK,CAAC;QAErC,SAASoC,MAAM,CAACC,IAAI,EAAEC,WAAW,EAAEC,OAAO,EAAE;UAC1C;;UAEA,IAAIC,IAAI,GAAI,GAAE,CACZ,iBAAiB,EACjB,QAAQ,EACR,UAAU,EACV,4BAA4B,EAC5B,yDAAyD,EACxD,uBAAsBlD,EAAE,CAACmD,MAAM,CAACzB,QAAQ,CAAE,UAAS,EACnD,8BAA6BpB,GAAI,UAAS,EAC3C,WAAW,EACX,UAAU,EACT,gBAAeN,EAAE,CAACmD,MAAM,CAACzB,QAAQ,CAAE,OAAM,CAC3C,CAACI,IAAI,CAAC,IAAI,CAAE,IAAG;UAEhBoB,IAAI,IAAI,SAAS;UAEjB,MAAME,MAAM,GAAG,KAAK;UACpB,MAAMC,QAAQ,GAAIC,IAAI,IAAK;YACzB;YACA,MAAMC,KAAK,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACE,WAAW,IAAIF,IAAI,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;YAC1D,IAAIC,IAAI,GAAI,KAAIC,kBAAkB,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAE,EAAC;;YAE7C;YACA,IAAIC,KAAK,EAAE;cACTE,IAAI,IAAK,IAAGzD,EAAE,CAACmD,MAAM,CAAE3B,MAAM,CAACmC,MAAM,GAAInC,MAAM,CAACmC,MAAM,GAAG,EAAE,CAAE,EAAC;YAC/D;YAEA,MAAMC,WAAW,GAAG5D,EAAE,CAACmD,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAKC,KAAK,GAAI,GAAG,GAAG,EAAE,CAAC;YAC7D,MAAMM,GAAG,GAAGP,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;YACpC,MAAMC,cAAc,GAAG5D,cAAc,CAACyD,GAAG,CAAC,GAAGA,GAAG,GAAG,OAAO;YAC1D,MAAMI,SAAS,GAAI,QAAOV,KAAK,GAAG,QAAQ,GAAGS,cAAe,EAAC;;YAE7D;YACAd,IAAI,IAAK,GAAE,MAAM,GACf,qBAAsB,GAAEe,SAAU,aAAY;YAChD,IAAI,CAAClD,eAAe,EAAE;cACpBmC,IAAI,IAAK,4BAA2BvD,aAAa,CAAC2D,IAAI,CAAC,CAAC,CAAC,CAAE,eAAc;YAC3E;YACAJ,IAAI,IACD,6BAA4BxD,oBAAoB,CAAC4D,IAAI,CAAC,CAAC,CAAC,CAAE,OAAM,GAChE,+BAA8B1D,YAAY,CAAC0D,IAAI,CAAC,CAAC,CAAC,EAAExC,aAAa,EAAEI,EAAE,CAAE,cAAa,GACpF,qCAAoCuC,IAAK,KAAIG,WAAY,WAAU,GACpE,SAAS;UACb,CAAC;UAEDb,IAAI,CAACmB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,CAACE,QAAQ,EAAE,CAACC,aAAa,CAACF,CAAC,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE,CAAC,CAAC,CAACE,OAAO,CAAClB,QAAQ,CAAC;UACrFL,WAAW,CAACkB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,QAAQ,EAAE,CAACC,aAAa,CAACF,CAAC,CAACC,QAAQ,EAAE,CAAC,CAAC,CAACE,OAAO,CAAClB,QAAQ,CAAC;UACtFJ,OAAO,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,CAACE,QAAQ,EAAE,CAACC,aAAa,CAACF,CAAC,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE,CAAC,CAAC,CAACE,OAAO,CAAClB,QAAQ,CAAC;UAExFH,IAAI,IAAI,YAAY;UACpBA,IAAI,IAAK,wBACPsB,OAAO,CAACC,OACP,wEAAuE,GACvE,oBACDzE,EAAE,CAACmD,MAAM,CAAC9B,GAAG,CAACqD,OAAO,CAACC,IAAI,IAAI,EAAE,CAAE,cAAa,GAC/C,gBAAgB;UAGlB,IAAI,CAACvB,MAAM,EAAE;YACX9B,GAAG,CAACsD,SAAS,CAAC,GAAG,EAAE;cAAE,cAAc,EAAE;YAAY,CAAC,CAAC;YACnDtD,GAAG,CAACuD,GAAG,CAAC3B,IAAI,CAAC;UACf;QACF;QAEArD,SAAS,CAAC+B,GAAG,EAAEU,KAAK,EAAE,CAACW,OAAO,EAAEF,IAAI,EAAE+B,WAAW,KAAK;UACpD;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA,IAAI/E,IAAI,CAACa,OAAO,CAACgB,GAAG,EAAE,IAAI,CAAC,CAACa,KAAK,CAAC,CAAC,EAAE9B,IAAI,CAACoE,MAAM,CAAC,KAAKpE,IAAI,EAAE;YAC1Db,EAAE,CAACkC,IAAI,CAACjC,IAAI,CAAC+B,IAAI,CAACF,GAAG,EAAE,IAAI,CAAC,EAAE,CAACoD,GAAG,EAAEC,CAAC,KAAK;cACxC,IAAID,GAAG,EAAE;gBACP,IAAIhE,WAAW,EAAE;kBACfb,MAAM,CAAC,GAAG,CAAC,CAACmB,GAAG,EAAEC,IAAI,EAAE;oBAAEW,KAAK,EAAE8C;kBAAI,CAAC,CAAC;gBACxC,CAAC,MAAM;kBACLzD,IAAI,EAAE;gBACR;gBACA;cACF;cACAwB,IAAI,CAACmC,OAAO,CAAC,CAAC,IAAI,EAAED,CAAC,CAAC,CAAC;cACvBnC,MAAM,CAACC,IAAI,EAAE+B,WAAW,EAAE7B,OAAO,CAAC;YACpC,CAAC,CAAC;UACJ,CAAC,MAAM;YACLH,MAAM,CAACC,IAAI,EAAE+B,WAAW,EAAE7B,OAAO,CAAC;UACpC;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}