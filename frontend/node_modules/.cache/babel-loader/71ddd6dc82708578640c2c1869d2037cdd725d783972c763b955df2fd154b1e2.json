{"ast":null,"code":"'use strict';\n\nvar assert = require('assert');\nvar http = require('http');\nvar https = require('https');\nvar net = require('net');\nvar util = require('util');\nvar transport = require('spdy-transport');\nvar debug = require('debug')('spdy:client');\n\n// Node.js 0.10 and 0.12 support\nObject.assign = process.versions.modules >= 46 ? Object.assign // eslint-disable-next-line\n: util._extend;\nvar EventEmitter = require('events').EventEmitter;\nvar spdy = require('../spdy');\nvar mode = /^v0\\.8\\./.test(process.version) ? 'rusty' : /^v0\\.(9|10)\\./.test(process.version) ? 'old' : /^v0\\.12\\./.test(process.version) ? 'normal' : 'modern';\nvar proto = {};\nfunction instantiate(base) {\n  function Agent(options) {\n    this._init(base, options);\n  }\n  util.inherits(Agent, base);\n  Agent.create = function create(options) {\n    return new Agent(options);\n  };\n  Object.keys(proto).forEach(function (key) {\n    Agent.prototype[key] = proto[key];\n  });\n  return Agent;\n}\nproto._init = function _init(base, options) {\n  base.call(this, options);\n  var state = {};\n  this._spdyState = state;\n  state.host = options.host;\n  state.options = options.spdy || {};\n  state.secure = this instanceof https.Agent;\n  state.fallback = false;\n  state.createSocket = this._getCreateSocket();\n  state.socket = null;\n  state.connection = null;\n\n  // No chunked encoding\n  this.keepAlive = false;\n  var self = this;\n  this._connect(options, function (err, connection) {\n    if (err) {\n      return self.emit('error', err);\n    }\n    state.connection = connection;\n    self.emit('_connect');\n  });\n};\nproto._getCreateSocket = function _getCreateSocket() {\n  // Find super's `createSocket` method\n  var createSocket;\n  var cons = this.constructor.super_;\n  do {\n    createSocket = cons.prototype.createSocket;\n    if (cons.super_ === EventEmitter || !cons.super_) {\n      break;\n    }\n    cons = cons.super_;\n  } while (!createSocket);\n  if (!createSocket) {\n    createSocket = http.Agent.prototype.createSocket;\n  }\n  assert(createSocket, '.createSocket() method not found');\n  return createSocket;\n};\nproto._connect = function _connect(options, callback) {\n  var self = this;\n  var state = this._spdyState;\n  var protocols = state.options.protocols || ['h2', 'spdy/3.1', 'spdy/3', 'spdy/2', 'http/1.1', 'http/1.0'];\n\n  // TODO(indutny): reconnect automatically?\n  var socket = this.createConnection(Object.assign({\n    NPNProtocols: protocols,\n    ALPNProtocols: protocols,\n    servername: options.servername || options.host\n  }, options));\n  state.socket = socket;\n  socket.setNoDelay(true);\n  function onError(err) {\n    return callback(err);\n  }\n  socket.on('error', onError);\n  socket.on(state.secure ? 'secureConnect' : 'connect', function () {\n    socket.removeListener('error', onError);\n    var protocol;\n    if (state.secure) {\n      protocol = socket.npnProtocol || socket.alpnProtocol || state.options.protocol;\n    } else {\n      protocol = state.options.protocol;\n    }\n\n    // HTTP server - kill socket and switch to the fallback mode\n    if (!protocol || protocol === 'http/1.1' || protocol === 'http/1.0') {\n      debug('activating fallback');\n      socket.destroy();\n      state.fallback = true;\n      return;\n    }\n    debug('connected protocol=%j', protocol);\n    var connection = transport.connection.create(socket, Object.assign({\n      protocol: /spdy/.test(protocol) ? 'spdy' : 'http2',\n      isServer: false\n    }, state.options.connection || {}));\n\n    // Pass connection level errors are passed to the agent.\n    connection.on('error', function (err) {\n      self.emit('error', err);\n    });\n\n    // Set version when we are certain\n    if (protocol === 'h2') {\n      connection.start(4);\n    } else if (protocol === 'spdy/3.1') {\n      connection.start(3.1);\n    } else if (protocol === 'spdy/3') {\n      connection.start(3);\n    } else if (protocol === 'spdy/2') {\n      connection.start(2);\n    } else {\n      socket.destroy();\n      callback(new Error('Unexpected protocol: ' + protocol));\n      return;\n    }\n    if (state.options['x-forwarded-for'] !== undefined) {\n      connection.sendXForwardedFor(state.options['x-forwarded-for']);\n    }\n    callback(null, connection);\n  });\n};\nproto._createSocket = function _createSocket(req, options, callback) {\n  var state = this._spdyState;\n  if (state.fallback) {\n    return state.createSocket(req, options);\n  }\n  var handle = spdy.handle.create(null, null, state.socket);\n  var socketOptions = {\n    handle: handle,\n    allowHalfOpen: true\n  };\n  var socket;\n  if (state.secure) {\n    socket = new spdy.Socket(state.socket, socketOptions);\n  } else {\n    socket = new net.Socket(socketOptions);\n  }\n  handle.assignSocket(socket);\n  handle.assignClientRequest(req);\n\n  // Create stream only once `req.end()` is called\n  var self = this;\n  handle.once('needStream', function () {\n    if (state.connection === null) {\n      self.once('_connect', function () {\n        handle.setStream(self._createStream(req, handle));\n      });\n    } else {\n      handle.setStream(self._createStream(req, handle));\n    }\n  });\n\n  // Yes, it is in reverse\n  req.on('response', function (res) {\n    handle.assignRequest(res);\n  });\n  handle.assignResponse(req);\n\n  // Handle PUSH\n  req.addListener('newListener', spdy.request.onNewListener);\n\n  // For v0.8\n  socket.readable = true;\n  socket.writable = true;\n  if (callback) {\n    return callback(null, socket);\n  }\n  return socket;\n};\nif (mode === 'modern' || mode === 'normal') {\n  proto.createSocket = proto._createSocket;\n} else {\n  proto.createSocket = function createSocket(name, host, port, addr, req) {\n    var state = this._spdyState;\n    if (state.fallback) {\n      return state.createSocket(name, host, port, addr, req);\n    }\n    return this._createSocket(req, {\n      host: host,\n      port: port\n    });\n  };\n}\nproto._createStream = function _createStream(req, handle) {\n  var state = this._spdyState;\n  var self = this;\n  return state.connection.reserveStream({\n    method: req.method,\n    path: req.path,\n    headers: req._headers,\n    host: state.host\n  }, function (err, stream) {\n    if (err) {\n      return self.emit('error', err);\n    }\n    stream.on('response', function (status, headers) {\n      handle.emitResponse(status, headers);\n    });\n  });\n};\n\n// Public APIs\n\nproto.close = function close(callback) {\n  var state = this._spdyState;\n  if (state.connection === null) {\n    this.once('_connect', function () {\n      this.close(callback);\n    });\n    return;\n  }\n  state.connection.end(callback);\n};\nexports.Agent = instantiate(https.Agent);\nexports.PlainAgent = instantiate(http.Agent);\nexports.create = function create(base, options) {\n  if (typeof base === 'object') {\n    options = base;\n    base = null;\n  }\n  if (base) {\n    return instantiate(base).create(options);\n  }\n  if (options.spdy && options.spdy.plain) {\n    return exports.PlainAgent.create(options);\n  } else {\n    return exports.Agent.create(options);\n  }\n};","map":{"version":3,"names":["assert","require","http","https","net","util","transport","debug","Object","assign","process","versions","modules","_extend","EventEmitter","spdy","mode","test","version","proto","instantiate","base","Agent","options","_init","inherits","create","keys","forEach","key","prototype","call","state","_spdyState","host","secure","fallback","createSocket","_getCreateSocket","socket","connection","keepAlive","self","_connect","err","emit","cons","constructor","super_","callback","protocols","createConnection","NPNProtocols","ALPNProtocols","servername","setNoDelay","onError","on","removeListener","protocol","npnProtocol","alpnProtocol","destroy","isServer","start","Error","undefined","sendXForwardedFor","_createSocket","req","handle","socketOptions","allowHalfOpen","Socket","assignSocket","assignClientRequest","once","setStream","_createStream","res","assignRequest","assignResponse","addListener","request","onNewListener","readable","writable","name","port","addr","reserveStream","method","path","headers","_headers","stream","status","emitResponse","close","end","exports","PlainAgent","plain"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/spdy/lib/spdy/agent.js"],"sourcesContent":["'use strict'\n\nvar assert = require('assert')\nvar http = require('http')\nvar https = require('https')\nvar net = require('net')\nvar util = require('util')\nvar transport = require('spdy-transport')\nvar debug = require('debug')('spdy:client')\n\n// Node.js 0.10 and 0.12 support\nObject.assign = process.versions.modules >= 46\n  ? Object.assign // eslint-disable-next-line\n  : util._extend\n\nvar EventEmitter = require('events').EventEmitter\n\nvar spdy = require('../spdy')\n\nvar mode = /^v0\\.8\\./.test(process.version)\n  ? 'rusty'\n  : /^v0\\.(9|10)\\./.test(process.version)\n    ? 'old'\n    : /^v0\\.12\\./.test(process.version)\n      ? 'normal'\n      : 'modern'\n\nvar proto = {}\n\nfunction instantiate (base) {\n  function Agent (options) {\n    this._init(base, options)\n  }\n  util.inherits(Agent, base)\n\n  Agent.create = function create (options) {\n    return new Agent(options)\n  }\n\n  Object.keys(proto).forEach(function (key) {\n    Agent.prototype[key] = proto[key]\n  })\n\n  return Agent\n}\n\nproto._init = function _init (base, options) {\n  base.call(this, options)\n\n  var state = {}\n  this._spdyState = state\n\n  state.host = options.host\n  state.options = options.spdy || {}\n  state.secure = this instanceof https.Agent\n  state.fallback = false\n  state.createSocket = this._getCreateSocket()\n  state.socket = null\n  state.connection = null\n\n  // No chunked encoding\n  this.keepAlive = false\n\n  var self = this\n  this._connect(options, function (err, connection) {\n    if (err) {\n      return self.emit('error', err)\n    }\n\n    state.connection = connection\n    self.emit('_connect')\n  })\n}\n\nproto._getCreateSocket = function _getCreateSocket () {\n  // Find super's `createSocket` method\n  var createSocket\n  var cons = this.constructor.super_\n  do {\n    createSocket = cons.prototype.createSocket\n\n    if (cons.super_ === EventEmitter || !cons.super_) {\n      break\n    }\n    cons = cons.super_\n  } while (!createSocket)\n  if (!createSocket) {\n    createSocket = http.Agent.prototype.createSocket\n  }\n\n  assert(createSocket, '.createSocket() method not found')\n\n  return createSocket\n}\n\nproto._connect = function _connect (options, callback) {\n  var self = this\n  var state = this._spdyState\n\n  var protocols = state.options.protocols || [\n    'h2',\n    'spdy/3.1', 'spdy/3', 'spdy/2',\n    'http/1.1', 'http/1.0'\n  ]\n\n  // TODO(indutny): reconnect automatically?\n  var socket = this.createConnection(Object.assign({\n    NPNProtocols: protocols,\n    ALPNProtocols: protocols,\n    servername: options.servername || options.host\n  }, options))\n  state.socket = socket\n\n  socket.setNoDelay(true)\n\n  function onError (err) {\n    return callback(err)\n  }\n  socket.on('error', onError)\n\n  socket.on(state.secure ? 'secureConnect' : 'connect', function () {\n    socket.removeListener('error', onError)\n\n    var protocol\n    if (state.secure) {\n      protocol = socket.npnProtocol ||\n                 socket.alpnProtocol ||\n                 state.options.protocol\n    } else {\n      protocol = state.options.protocol\n    }\n\n    // HTTP server - kill socket and switch to the fallback mode\n    if (!protocol || protocol === 'http/1.1' || protocol === 'http/1.0') {\n      debug('activating fallback')\n      socket.destroy()\n      state.fallback = true\n      return\n    }\n\n    debug('connected protocol=%j', protocol)\n    var connection = transport.connection.create(socket, Object.assign({\n      protocol: /spdy/.test(protocol) ? 'spdy' : 'http2',\n      isServer: false\n    }, state.options.connection || {}))\n\n    // Pass connection level errors are passed to the agent.\n    connection.on('error', function (err) {\n      self.emit('error', err)\n    })\n\n    // Set version when we are certain\n    if (protocol === 'h2') {\n      connection.start(4)\n    } else if (protocol === 'spdy/3.1') {\n      connection.start(3.1)\n    } else if (protocol === 'spdy/3') {\n      connection.start(3)\n    } else if (protocol === 'spdy/2') {\n      connection.start(2)\n    } else {\n      socket.destroy()\n      callback(new Error('Unexpected protocol: ' + protocol))\n      return\n    }\n\n    if (state.options['x-forwarded-for'] !== undefined) {\n      connection.sendXForwardedFor(state.options['x-forwarded-for'])\n    }\n\n    callback(null, connection)\n  })\n}\n\nproto._createSocket = function _createSocket (req, options, callback) {\n  var state = this._spdyState\n  if (state.fallback) { return state.createSocket(req, options) }\n\n  var handle = spdy.handle.create(null, null, state.socket)\n\n  var socketOptions = {\n    handle: handle,\n    allowHalfOpen: true\n  }\n\n  var socket\n  if (state.secure) {\n    socket = new spdy.Socket(state.socket, socketOptions)\n  } else {\n    socket = new net.Socket(socketOptions)\n  }\n\n  handle.assignSocket(socket)\n  handle.assignClientRequest(req)\n\n  // Create stream only once `req.end()` is called\n  var self = this\n  handle.once('needStream', function () {\n    if (state.connection === null) {\n      self.once('_connect', function () {\n        handle.setStream(self._createStream(req, handle))\n      })\n    } else {\n      handle.setStream(self._createStream(req, handle))\n    }\n  })\n\n  // Yes, it is in reverse\n  req.on('response', function (res) {\n    handle.assignRequest(res)\n  })\n  handle.assignResponse(req)\n\n  // Handle PUSH\n  req.addListener('newListener', spdy.request.onNewListener)\n\n  // For v0.8\n  socket.readable = true\n  socket.writable = true\n\n  if (callback) {\n    return callback(null, socket)\n  }\n\n  return socket\n}\n\nif (mode === 'modern' || mode === 'normal') {\n  proto.createSocket = proto._createSocket\n} else {\n  proto.createSocket = function createSocket (name, host, port, addr, req) {\n    var state = this._spdyState\n    if (state.fallback) {\n      return state.createSocket(name, host, port, addr, req)\n    }\n\n    return this._createSocket(req, {\n      host: host,\n      port: port\n    })\n  }\n}\n\nproto._createStream = function _createStream (req, handle) {\n  var state = this._spdyState\n\n  var self = this\n  return state.connection.reserveStream({\n    method: req.method,\n    path: req.path,\n    headers: req._headers,\n    host: state.host\n  }, function (err, stream) {\n    if (err) {\n      return self.emit('error', err)\n    }\n\n    stream.on('response', function (status, headers) {\n      handle.emitResponse(status, headers)\n    })\n  })\n}\n\n// Public APIs\n\nproto.close = function close (callback) {\n  var state = this._spdyState\n\n  if (state.connection === null) {\n    this.once('_connect', function () {\n      this.close(callback)\n    })\n    return\n  }\n\n  state.connection.end(callback)\n}\n\nexports.Agent = instantiate(https.Agent)\nexports.PlainAgent = instantiate(http.Agent)\n\nexports.create = function create (base, options) {\n  if (typeof base === 'object') {\n    options = base\n    base = null\n  }\n\n  if (base) {\n    return instantiate(base).create(options)\n  }\n\n  if (options.spdy && options.spdy.plain) {\n    return exports.PlainAgent.create(options)\n  } else { return exports.Agent.create(options) }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}