{"ast":null,"code":"'use strict';\n\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nvar debug = {\n  server: require('debug')('spdy:window:server'),\n  client: require('debug')('spdy:window:client')\n};\nfunction Side(window, name, options) {\n  EventEmitter.call(this);\n  this.name = name;\n  this.window = window;\n  this.current = options.size;\n  this.max = options.size;\n  this.limit = options.max;\n  this.lowWaterMark = options.lowWaterMark === undefined ? this.max / 2 : options.lowWaterMark;\n  this._refilling = false;\n  this._refillQueue = [];\n}\nutil.inherits(Side, EventEmitter);\nSide.prototype.setMax = function setMax(max) {\n  this.window.debug('id=%d side=%s setMax=%d', this.window.id, this.name, max);\n  this.max = max;\n  this.lowWaterMark = this.max / 2;\n};\nSide.prototype.updateMax = function updateMax(max) {\n  var delta = max - this.max;\n  this.window.debug('id=%d side=%s updateMax=%d delta=%d', this.window.id, this.name, max, delta);\n  this.max = max;\n  this.lowWaterMark = max / 2;\n  this.update(delta);\n};\nSide.prototype.setLowWaterMark = function setLowWaterMark(lwm) {\n  this.lowWaterMark = lwm;\n};\nSide.prototype.update = function update(size, callback) {\n  // Not enough space for the update, wait for refill\n  if (size <= 0 && callback && this.isEmpty()) {\n    this.window.debug('id=%d side=%s wait for refill=%d [%d/%d]', this.window.id, this.name, -size, this.current, this.max);\n    this._refillQueue.push({\n      size: size,\n      callback: callback\n    });\n    return;\n  }\n  this.current += size;\n  if (this.current > this.limit) {\n    this.emit('overflow');\n    return;\n  }\n  this.window.debug('id=%d side=%s update by=%d [%d/%d]', this.window.id, this.name, size, this.current, this.max);\n\n  // Time to send WINDOW_UPDATE\n  if (size < 0 && this.isDraining()) {\n    this.window.debug('id=%d side=%s drained', this.window.id, this.name);\n    this.emit('drain');\n  }\n\n  // Time to write\n  if (size > 0 && this.current > 0 && this.current <= size) {\n    this.window.debug('id=%d side=%s full', this.window.id, this.name);\n    this.emit('full');\n  }\n  this._processRefillQueue();\n  if (callback) {\n    process.nextTick(callback);\n  }\n};\nSide.prototype.getCurrent = function getCurrent() {\n  return this.current;\n};\nSide.prototype.getMax = function getMax() {\n  return this.max;\n};\nSide.prototype.getDelta = function getDelta() {\n  return this.max - this.current;\n};\nSide.prototype.isDraining = function isDraining() {\n  return this.current <= this.lowWaterMark;\n};\nSide.prototype.isEmpty = function isEmpty() {\n  return this.current <= 0;\n};\n\n// Private\n\nSide.prototype._processRefillQueue = function _processRefillQueue() {\n  // Prevent recursion\n  if (this._refilling) {\n    return;\n  }\n  this._refilling = true;\n  while (this._refillQueue.length > 0) {\n    var item = this._refillQueue[0];\n    if (this.isEmpty()) {\n      break;\n    }\n    this.window.debug('id=%d side=%s refilled for size=%d', this.window.id, this.name, -item.size);\n    this._refillQueue.shift();\n    this.update(item.size, item.callback);\n  }\n  this._refilling = false;\n};\nfunction Window(options) {\n  this.id = options.id;\n  this.isServer = options.isServer;\n  this.debug = this.isServer ? debug.server : debug.client;\n  this.recv = new Side(this, 'recv', options.recv);\n  this.send = new Side(this, 'send', options.send);\n}\nmodule.exports = Window;\nWindow.prototype.clone = function clone(id) {\n  return new Window({\n    id: id,\n    isServer: this.isServer,\n    recv: {\n      size: this.recv.max,\n      max: this.recv.limit,\n      lowWaterMark: this.recv.lowWaterMark\n    },\n    send: {\n      size: this.send.max,\n      max: this.send.limit,\n      lowWaterMark: this.send.lowWaterMark\n    }\n  });\n};","map":{"version":3,"names":["util","require","EventEmitter","debug","server","client","Side","window","name","options","call","current","size","max","limit","lowWaterMark","undefined","_refilling","_refillQueue","inherits","prototype","setMax","id","updateMax","delta","update","setLowWaterMark","lwm","callback","isEmpty","push","emit","isDraining","_processRefillQueue","process","nextTick","getCurrent","getMax","getDelta","length","item","shift","Window","isServer","recv","send","module","exports","clone"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/spdy-transport/lib/spdy-transport/window.js"],"sourcesContent":["'use strict'\n\nvar util = require('util')\nvar EventEmitter = require('events').EventEmitter\nvar debug = {\n  server: require('debug')('spdy:window:server'),\n  client: require('debug')('spdy:window:client')\n}\n\nfunction Side (window, name, options) {\n  EventEmitter.call(this)\n\n  this.name = name\n  this.window = window\n  this.current = options.size\n  this.max = options.size\n  this.limit = options.max\n  this.lowWaterMark = options.lowWaterMark === undefined\n    ? this.max / 2\n    : options.lowWaterMark\n\n  this._refilling = false\n  this._refillQueue = []\n}\nutil.inherits(Side, EventEmitter)\n\nSide.prototype.setMax = function setMax (max) {\n  this.window.debug('id=%d side=%s setMax=%d',\n    this.window.id,\n    this.name,\n    max)\n  this.max = max\n  this.lowWaterMark = this.max / 2\n}\n\nSide.prototype.updateMax = function updateMax (max) {\n  var delta = max - this.max\n  this.window.debug('id=%d side=%s updateMax=%d delta=%d',\n    this.window.id,\n    this.name,\n    max,\n    delta)\n\n  this.max = max\n  this.lowWaterMark = max / 2\n\n  this.update(delta)\n}\n\nSide.prototype.setLowWaterMark = function setLowWaterMark (lwm) {\n  this.lowWaterMark = lwm\n}\n\nSide.prototype.update = function update (size, callback) {\n  // Not enough space for the update, wait for refill\n  if (size <= 0 && callback && this.isEmpty()) {\n    this.window.debug('id=%d side=%s wait for refill=%d [%d/%d]',\n      this.window.id,\n      this.name,\n      -size,\n      this.current,\n      this.max)\n    this._refillQueue.push({\n      size: size,\n      callback: callback\n    })\n    return\n  }\n\n  this.current += size\n\n  if (this.current > this.limit) {\n    this.emit('overflow')\n    return\n  }\n\n  this.window.debug('id=%d side=%s update by=%d [%d/%d]',\n    this.window.id,\n    this.name,\n    size,\n    this.current,\n    this.max)\n\n  // Time to send WINDOW_UPDATE\n  if (size < 0 && this.isDraining()) {\n    this.window.debug('id=%d side=%s drained', this.window.id, this.name)\n    this.emit('drain')\n  }\n\n  // Time to write\n  if (size > 0 && this.current > 0 && this.current <= size) {\n    this.window.debug('id=%d side=%s full', this.window.id, this.name)\n    this.emit('full')\n  }\n\n  this._processRefillQueue()\n\n  if (callback) { process.nextTick(callback) }\n}\n\nSide.prototype.getCurrent = function getCurrent () {\n  return this.current\n}\n\nSide.prototype.getMax = function getMax () {\n  return this.max\n}\n\nSide.prototype.getDelta = function getDelta () {\n  return this.max - this.current\n}\n\nSide.prototype.isDraining = function isDraining () {\n  return this.current <= this.lowWaterMark\n}\n\nSide.prototype.isEmpty = function isEmpty () {\n  return this.current <= 0\n}\n\n// Private\n\nSide.prototype._processRefillQueue = function _processRefillQueue () {\n  // Prevent recursion\n  if (this._refilling) {\n    return\n  }\n  this._refilling = true\n\n  while (this._refillQueue.length > 0) {\n    var item = this._refillQueue[0]\n\n    if (this.isEmpty()) {\n      break\n    }\n\n    this.window.debug('id=%d side=%s refilled for size=%d',\n      this.window.id,\n      this.name,\n      -item.size)\n\n    this._refillQueue.shift()\n    this.update(item.size, item.callback)\n  }\n\n  this._refilling = false\n}\n\nfunction Window (options) {\n  this.id = options.id\n  this.isServer = options.isServer\n  this.debug = this.isServer ? debug.server : debug.client\n\n  this.recv = new Side(this, 'recv', options.recv)\n  this.send = new Side(this, 'send', options.send)\n}\nmodule.exports = Window\n\nWindow.prototype.clone = function clone (id) {\n  return new Window({\n    id: id,\n    isServer: this.isServer,\n    recv: {\n      size: this.recv.max,\n      max: this.recv.limit,\n      lowWaterMark: this.recv.lowWaterMark\n    },\n    send: {\n      size: this.send.max,\n      max: this.send.limit,\n      lowWaterMark: this.send.lowWaterMark\n    }\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,YAAY,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,YAAY;AACjD,IAAIC,KAAK,GAAG;EACVC,MAAM,EAAEH,OAAO,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC;EAC9CI,MAAM,EAAEJ,OAAO,CAAC,OAAO,CAAC,CAAC,oBAAoB;AAC/C,CAAC;AAED,SAASK,IAAI,CAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACpCP,YAAY,CAACQ,IAAI,CAAC,IAAI,CAAC;EAEvB,IAAI,CAACF,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACD,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACI,OAAO,GAAGF,OAAO,CAACG,IAAI;EAC3B,IAAI,CAACC,GAAG,GAAGJ,OAAO,CAACG,IAAI;EACvB,IAAI,CAACE,KAAK,GAAGL,OAAO,CAACI,GAAG;EACxB,IAAI,CAACE,YAAY,GAAGN,OAAO,CAACM,YAAY,KAAKC,SAAS,GAClD,IAAI,CAACH,GAAG,GAAG,CAAC,GACZJ,OAAO,CAACM,YAAY;EAExB,IAAI,CAACE,UAAU,GAAG,KAAK;EACvB,IAAI,CAACC,YAAY,GAAG,EAAE;AACxB;AACAlB,IAAI,CAACmB,QAAQ,CAACb,IAAI,EAAEJ,YAAY,CAAC;AAEjCI,IAAI,CAACc,SAAS,CAACC,MAAM,GAAG,SAASA,MAAM,CAAER,GAAG,EAAE;EAC5C,IAAI,CAACN,MAAM,CAACJ,KAAK,CAAC,yBAAyB,EACzC,IAAI,CAACI,MAAM,CAACe,EAAE,EACd,IAAI,CAACd,IAAI,EACTK,GAAG,CAAC;EACN,IAAI,CAACA,GAAG,GAAGA,GAAG;EACd,IAAI,CAACE,YAAY,GAAG,IAAI,CAACF,GAAG,GAAG,CAAC;AAClC,CAAC;AAEDP,IAAI,CAACc,SAAS,CAACG,SAAS,GAAG,SAASA,SAAS,CAAEV,GAAG,EAAE;EAClD,IAAIW,KAAK,GAAGX,GAAG,GAAG,IAAI,CAACA,GAAG;EAC1B,IAAI,CAACN,MAAM,CAACJ,KAAK,CAAC,qCAAqC,EACrD,IAAI,CAACI,MAAM,CAACe,EAAE,EACd,IAAI,CAACd,IAAI,EACTK,GAAG,EACHW,KAAK,CAAC;EAER,IAAI,CAACX,GAAG,GAAGA,GAAG;EACd,IAAI,CAACE,YAAY,GAAGF,GAAG,GAAG,CAAC;EAE3B,IAAI,CAACY,MAAM,CAACD,KAAK,CAAC;AACpB,CAAC;AAEDlB,IAAI,CAACc,SAAS,CAACM,eAAe,GAAG,SAASA,eAAe,CAAEC,GAAG,EAAE;EAC9D,IAAI,CAACZ,YAAY,GAAGY,GAAG;AACzB,CAAC;AAEDrB,IAAI,CAACc,SAAS,CAACK,MAAM,GAAG,SAASA,MAAM,CAAEb,IAAI,EAAEgB,QAAQ,EAAE;EACvD;EACA,IAAIhB,IAAI,IAAI,CAAC,IAAIgB,QAAQ,IAAI,IAAI,CAACC,OAAO,EAAE,EAAE;IAC3C,IAAI,CAACtB,MAAM,CAACJ,KAAK,CAAC,0CAA0C,EAC1D,IAAI,CAACI,MAAM,CAACe,EAAE,EACd,IAAI,CAACd,IAAI,EACT,CAACI,IAAI,EACL,IAAI,CAACD,OAAO,EACZ,IAAI,CAACE,GAAG,CAAC;IACX,IAAI,CAACK,YAAY,CAACY,IAAI,CAAC;MACrBlB,IAAI,EAAEA,IAAI;MACVgB,QAAQ,EAAEA;IACZ,CAAC,CAAC;IACF;EACF;EAEA,IAAI,CAACjB,OAAO,IAAIC,IAAI;EAEpB,IAAI,IAAI,CAACD,OAAO,GAAG,IAAI,CAACG,KAAK,EAAE;IAC7B,IAAI,CAACiB,IAAI,CAAC,UAAU,CAAC;IACrB;EACF;EAEA,IAAI,CAACxB,MAAM,CAACJ,KAAK,CAAC,oCAAoC,EACpD,IAAI,CAACI,MAAM,CAACe,EAAE,EACd,IAAI,CAACd,IAAI,EACTI,IAAI,EACJ,IAAI,CAACD,OAAO,EACZ,IAAI,CAACE,GAAG,CAAC;;EAEX;EACA,IAAID,IAAI,GAAG,CAAC,IAAI,IAAI,CAACoB,UAAU,EAAE,EAAE;IACjC,IAAI,CAACzB,MAAM,CAACJ,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAACI,MAAM,CAACe,EAAE,EAAE,IAAI,CAACd,IAAI,CAAC;IACrE,IAAI,CAACuB,IAAI,CAAC,OAAO,CAAC;EACpB;;EAEA;EACA,IAAInB,IAAI,GAAG,CAAC,IAAI,IAAI,CAACD,OAAO,GAAG,CAAC,IAAI,IAAI,CAACA,OAAO,IAAIC,IAAI,EAAE;IACxD,IAAI,CAACL,MAAM,CAACJ,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAACI,MAAM,CAACe,EAAE,EAAE,IAAI,CAACd,IAAI,CAAC;IAClE,IAAI,CAACuB,IAAI,CAAC,MAAM,CAAC;EACnB;EAEA,IAAI,CAACE,mBAAmB,EAAE;EAE1B,IAAIL,QAAQ,EAAE;IAAEM,OAAO,CAACC,QAAQ,CAACP,QAAQ,CAAC;EAAC;AAC7C,CAAC;AAEDtB,IAAI,CAACc,SAAS,CAACgB,UAAU,GAAG,SAASA,UAAU,GAAI;EACjD,OAAO,IAAI,CAACzB,OAAO;AACrB,CAAC;AAEDL,IAAI,CAACc,SAAS,CAACiB,MAAM,GAAG,SAASA,MAAM,GAAI;EACzC,OAAO,IAAI,CAACxB,GAAG;AACjB,CAAC;AAEDP,IAAI,CAACc,SAAS,CAACkB,QAAQ,GAAG,SAASA,QAAQ,GAAI;EAC7C,OAAO,IAAI,CAACzB,GAAG,GAAG,IAAI,CAACF,OAAO;AAChC,CAAC;AAEDL,IAAI,CAACc,SAAS,CAACY,UAAU,GAAG,SAASA,UAAU,GAAI;EACjD,OAAO,IAAI,CAACrB,OAAO,IAAI,IAAI,CAACI,YAAY;AAC1C,CAAC;AAEDT,IAAI,CAACc,SAAS,CAACS,OAAO,GAAG,SAASA,OAAO,GAAI;EAC3C,OAAO,IAAI,CAAClB,OAAO,IAAI,CAAC;AAC1B,CAAC;;AAED;;AAEAL,IAAI,CAACc,SAAS,CAACa,mBAAmB,GAAG,SAASA,mBAAmB,GAAI;EACnE;EACA,IAAI,IAAI,CAAChB,UAAU,EAAE;IACnB;EACF;EACA,IAAI,CAACA,UAAU,GAAG,IAAI;EAEtB,OAAO,IAAI,CAACC,YAAY,CAACqB,MAAM,GAAG,CAAC,EAAE;IACnC,IAAIC,IAAI,GAAG,IAAI,CAACtB,YAAY,CAAC,CAAC,CAAC;IAE/B,IAAI,IAAI,CAACW,OAAO,EAAE,EAAE;MAClB;IACF;IAEA,IAAI,CAACtB,MAAM,CAACJ,KAAK,CAAC,oCAAoC,EACpD,IAAI,CAACI,MAAM,CAACe,EAAE,EACd,IAAI,CAACd,IAAI,EACT,CAACgC,IAAI,CAAC5B,IAAI,CAAC;IAEb,IAAI,CAACM,YAAY,CAACuB,KAAK,EAAE;IACzB,IAAI,CAAChB,MAAM,CAACe,IAAI,CAAC5B,IAAI,EAAE4B,IAAI,CAACZ,QAAQ,CAAC;EACvC;EAEA,IAAI,CAACX,UAAU,GAAG,KAAK;AACzB,CAAC;AAED,SAASyB,MAAM,CAAEjC,OAAO,EAAE;EACxB,IAAI,CAACa,EAAE,GAAGb,OAAO,CAACa,EAAE;EACpB,IAAI,CAACqB,QAAQ,GAAGlC,OAAO,CAACkC,QAAQ;EAChC,IAAI,CAACxC,KAAK,GAAG,IAAI,CAACwC,QAAQ,GAAGxC,KAAK,CAACC,MAAM,GAAGD,KAAK,CAACE,MAAM;EAExD,IAAI,CAACuC,IAAI,GAAG,IAAItC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAEG,OAAO,CAACmC,IAAI,CAAC;EAChD,IAAI,CAACC,IAAI,GAAG,IAAIvC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAEG,OAAO,CAACoC,IAAI,CAAC;AAClD;AACAC,MAAM,CAACC,OAAO,GAAGL,MAAM;AAEvBA,MAAM,CAACtB,SAAS,CAAC4B,KAAK,GAAG,SAASA,KAAK,CAAE1B,EAAE,EAAE;EAC3C,OAAO,IAAIoB,MAAM,CAAC;IAChBpB,EAAE,EAAEA,EAAE;IACNqB,QAAQ,EAAE,IAAI,CAACA,QAAQ;IACvBC,IAAI,EAAE;MACJhC,IAAI,EAAE,IAAI,CAACgC,IAAI,CAAC/B,GAAG;MACnBA,GAAG,EAAE,IAAI,CAAC+B,IAAI,CAAC9B,KAAK;MACpBC,YAAY,EAAE,IAAI,CAAC6B,IAAI,CAAC7B;IAC1B,CAAC;IACD8B,IAAI,EAAE;MACJjC,IAAI,EAAE,IAAI,CAACiC,IAAI,CAAChC,GAAG;MACnBA,GAAG,EAAE,IAAI,CAACgC,IAAI,CAAC/B,KAAK;MACpBC,YAAY,EAAE,IAAI,CAAC8B,IAAI,CAAC9B;IAC1B;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}