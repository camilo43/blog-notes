{"ast":null,"code":"'use strict';\n\nvar transport = require('../../../spdy-transport');\nvar util = require('util');\nvar utils = require('./').utils;\nvar OffsetBuffer = require('obuf');\nvar Transform = require('readable-stream').Transform;\nfunction Parser(options) {\n  Transform.call(this, {\n    readableObjectMode: true\n  });\n  this.buffer = new OffsetBuffer();\n  this.partial = false;\n  this.waiting = 0;\n  this.window = options.window;\n  this.version = null;\n  this.decompress = null;\n  this.dead = false;\n}\nmodule.exports = Parser;\nutil.inherits(Parser, Transform);\nParser.prototype.error = utils.error;\nParser.prototype.kill = function kill() {\n  this.dead = true;\n};\nParser.prototype._transform = function transform(data, encoding, cb) {\n  if (!this.dead) {\n    this.buffer.push(data);\n  }\n  this._consume(cb);\n};\nParser.prototype._consume = function _consume(cb) {\n  var self = this;\n  function next(err, frame) {\n    if (err) {\n      return cb(err);\n    }\n    if (Array.isArray(frame)) {\n      for (var i = 0; i < frame.length; i++) {\n        self.push(frame[i]);\n      }\n    } else if (frame) {\n      self.push(frame);\n    }\n\n    // Consume more packets\n    if (!sync) {\n      return self._consume(cb);\n    }\n    process.nextTick(function () {\n      self._consume(cb);\n    });\n  }\n  if (this.dead) {\n    return cb();\n  }\n  if (this.buffer.size < this.waiting) {\n    // No data at all\n    if (this.buffer.size === 0) {\n      return cb();\n    }\n\n    // Partial DATA frame or something that we can process partially\n    if (this.partial) {\n      var partial = this.buffer.clone(this.buffer.size);\n      this.buffer.skip(partial.size);\n      this.waiting -= partial.size;\n      this.executePartial(partial, next);\n      return;\n    }\n\n    // We shall not do anything until we get all expected data\n    return cb();\n  }\n  var sync = true;\n  var content = this.buffer.clone(this.waiting);\n  this.buffer.skip(this.waiting);\n  this.execute(content, next);\n  sync = false;\n};\nParser.prototype.setVersion = function setVersion(version) {\n  this.version = version;\n  this.emit('version', version);\n};\nParser.prototype.setCompression = function setCompresion(pair) {\n  this.decompress = new transport.utils.LockStream(pair.decompress);\n};","map":{"version":3,"names":["transport","require","util","utils","OffsetBuffer","Transform","Parser","options","call","readableObjectMode","buffer","partial","waiting","window","version","decompress","dead","module","exports","inherits","prototype","error","kill","_transform","transform","data","encoding","cb","push","_consume","self","next","err","frame","Array","isArray","i","length","sync","process","nextTick","size","clone","skip","executePartial","content","execute","setVersion","emit","setCompression","setCompresion","pair","LockStream"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/spdy-transport/lib/spdy-transport/protocol/base/parser.js"],"sourcesContent":["'use strict'\n\nvar transport = require('../../../spdy-transport')\n\nvar util = require('util')\nvar utils = require('./').utils\nvar OffsetBuffer = require('obuf')\nvar Transform = require('readable-stream').Transform\n\nfunction Parser (options) {\n  Transform.call(this, {\n    readableObjectMode: true\n  })\n\n  this.buffer = new OffsetBuffer()\n  this.partial = false\n  this.waiting = 0\n\n  this.window = options.window\n\n  this.version = null\n  this.decompress = null\n  this.dead = false\n}\nmodule.exports = Parser\nutil.inherits(Parser, Transform)\n\nParser.prototype.error = utils.error\n\nParser.prototype.kill = function kill () {\n  this.dead = true\n}\n\nParser.prototype._transform = function transform (data, encoding, cb) {\n  if (!this.dead) { this.buffer.push(data) }\n\n  this._consume(cb)\n}\n\nParser.prototype._consume = function _consume (cb) {\n  var self = this\n\n  function next (err, frame) {\n    if (err) {\n      return cb(err)\n    }\n\n    if (Array.isArray(frame)) {\n      for (var i = 0; i < frame.length; i++) {\n        self.push(frame[i])\n      }\n    } else if (frame) {\n      self.push(frame)\n    }\n\n    // Consume more packets\n    if (!sync) {\n      return self._consume(cb)\n    }\n\n    process.nextTick(function () {\n      self._consume(cb)\n    })\n  }\n\n  if (this.dead) {\n    return cb()\n  }\n\n  if (this.buffer.size < this.waiting) {\n    // No data at all\n    if (this.buffer.size === 0) {\n      return cb()\n    }\n\n    // Partial DATA frame or something that we can process partially\n    if (this.partial) {\n      var partial = this.buffer.clone(this.buffer.size)\n      this.buffer.skip(partial.size)\n      this.waiting -= partial.size\n\n      this.executePartial(partial, next)\n      return\n    }\n\n    // We shall not do anything until we get all expected data\n    return cb()\n  }\n\n  var sync = true\n\n  var content = this.buffer.clone(this.waiting)\n  this.buffer.skip(this.waiting)\n\n  this.execute(content, next)\n  sync = false\n}\n\nParser.prototype.setVersion = function setVersion (version) {\n  this.version = version\n  this.emit('version', version)\n}\n\nParser.prototype.setCompression = function setCompresion (pair) {\n  this.decompress = new transport.utils.LockStream(pair.decompress)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}