{"ast":null,"code":"var Buffer = require('buffer').Buffer;\nfunction OffsetBuffer() {\n  this.offset = 0;\n  this.size = 0;\n  this.buffers = [];\n}\nmodule.exports = OffsetBuffer;\nOffsetBuffer.prototype.isEmpty = function isEmpty() {\n  return this.size === 0;\n};\nOffsetBuffer.prototype.clone = function clone(size) {\n  var r = new OffsetBuffer();\n  r.offset = this.offset;\n  r.size = size;\n  r.buffers = this.buffers.slice();\n  return r;\n};\nOffsetBuffer.prototype.toChunks = function toChunks() {\n  if (this.size === 0) return [];\n\n  // We are going to slice it anyway\n  if (this.offset !== 0) {\n    this.buffers[0] = this.buffers[0].slice(this.offset);\n    this.offset = 0;\n  }\n  var chunks = [];\n  var off = 0;\n  for (var i = 0; off <= this.size && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    off += buf.length;\n\n    // Slice off last buffer\n    if (off > this.size) {\n      buf = buf.slice(0, buf.length - (off - this.size));\n      this.buffers[i] = buf;\n    }\n    chunks.push(buf);\n  }\n\n  // If some buffers were skipped - trim length\n  if (i < this.buffers.length) this.buffers.length = i;\n  return chunks;\n};\nOffsetBuffer.prototype.toString = function toString(enc) {\n  return this.toChunks().map(function (c) {\n    return c.toString(enc);\n  }).join('');\n};\nOffsetBuffer.prototype.use = function use(buf, off, n) {\n  this.buffers = [buf];\n  this.offset = off;\n  this.size = n;\n};\nOffsetBuffer.prototype.push = function push(data) {\n  // Ignore empty writes\n  if (data.length === 0) return;\n  this.size += data.length;\n  this.buffers.push(data);\n};\nOffsetBuffer.prototype.has = function has(n) {\n  return this.size >= n;\n};\nOffsetBuffer.prototype.skip = function skip(n) {\n  if (this.size === 0) return;\n  this.size -= n;\n\n  // Fast case, skip bytes in a first buffer\n  if (this.offset + n < this.buffers[0].length) {\n    this.offset += n;\n    return;\n  }\n  var left = n - (this.buffers[0].length - this.offset);\n  this.offset = 0;\n  for (var shift = 1; left > 0 && shift < this.buffers.length; shift++) {\n    var buf = this.buffers[shift];\n    if (buf.length > left) {\n      this.offset = left;\n      break;\n    }\n    left -= buf.length;\n  }\n  this.buffers = this.buffers.slice(shift);\n};\nOffsetBuffer.prototype.copy = function copy(target, targetOff, off, n) {\n  if (this.size === 0) return;\n  if (off !== 0) throw new Error('Unsupported offset in .copy()');\n  var toff = targetOff;\n  var first = this.buffers[0];\n  var toCopy = Math.min(n, first.length - this.offset);\n  first.copy(target, toff, this.offset, this.offset + toCopy);\n  toff += toCopy;\n  var left = n - toCopy;\n  for (var i = 1; left > 0 && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    var toCopy = Math.min(left, buf.length);\n    buf.copy(target, toff, 0, toCopy);\n    toff += toCopy;\n    left -= toCopy;\n  }\n};\nOffsetBuffer.prototype.take = function take(n) {\n  if (n === 0) return new Buffer(0);\n  this.size -= n;\n\n  // Fast cases\n  var first = this.buffers[0].length - this.offset;\n  if (first === n) {\n    var r = this.buffers.shift();\n    if (this.offset !== 0) {\n      r = r.slice(this.offset);\n      this.offset = 0;\n    }\n    return r;\n  } else if (first > n) {\n    var r = this.buffers[0].slice(this.offset, this.offset + n);\n    this.offset += n;\n    return r;\n  }\n\n  // Allocate and fill buffer\n  var out = new Buffer(n);\n  var toOff = 0;\n  var startOff = this.offset;\n  for (var i = 0; toOff !== n && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    var toCopy = Math.min(buf.length - startOff, n - toOff);\n    buf.copy(out, toOff, startOff, startOff + toCopy);\n    if (startOff + toCopy < buf.length) {\n      this.offset = startOff + toCopy;\n      break;\n    } else {\n      toOff += toCopy;\n      startOff = 0;\n    }\n  }\n  this.buffers = this.buffers.slice(i);\n  if (this.buffers.length === 0) this.offset = 0;\n  return out;\n};\nOffsetBuffer.prototype.peekUInt8 = function peekUInt8() {\n  return this.buffers[0][this.offset];\n};\nOffsetBuffer.prototype.readUInt8 = function readUInt8() {\n  this.size -= 1;\n  var first = this.buffers[0];\n  var r = first[this.offset];\n  if (++this.offset === first.length) {\n    this.offset = 0;\n    this.buffers.shift();\n  }\n  return r;\n};\nOffsetBuffer.prototype.readUInt16LE = function readUInt16LE() {\n  var first = this.buffers[0];\n  this.size -= 2;\n  var r;\n  var shift;\n\n  // Fast case - first buffer has all bytes\n  if (first.length - this.offset >= 2) {\n    r = first.readUInt16LE(this.offset);\n    shift = 0;\n    this.offset += 2;\n\n    // One byte here - one byte there\n  } else {\n    r = first[this.offset] | this.buffers[1][0] << 8;\n    shift = 1;\n    this.offset = 1;\n  }\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0) this.buffers = this.buffers.slice(shift);\n  return r;\n};\nOffsetBuffer.prototype.readUInt24LE = function readUInt24LE() {\n  var first = this.buffers[0];\n  var r;\n  var shift;\n  var firstHas = first.length - this.offset;\n\n  // Fast case - first buffer has all bytes\n  if (firstHas >= 3) {\n    r = first.readUInt16LE(this.offset) | first[this.offset + 2] << 16;\n    shift = 0;\n    this.offset += 3;\n\n    // First buffer has 2 of 3 bytes\n  } else if (firstHas >= 2) {\n    r = first.readUInt16LE(this.offset) | this.buffers[1][0] << 16;\n    shift = 1;\n    this.offset = 1;\n\n    // Slow case: First buffer has 1 of 3 bytes\n  } else {\n    r = first[this.offset];\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 1;\n    r |= this.readUInt16LE() << 8;\n    return r;\n  }\n  this.size -= 3;\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0) this.buffers = this.buffers.slice(shift);\n  return r;\n};\nOffsetBuffer.prototype.readUInt32LE = function readUInt32LE() {\n  var first = this.buffers[0];\n  var r;\n  var shift;\n  var firstHas = first.length - this.offset;\n\n  // Fast case - first buffer has all bytes\n  if (firstHas >= 4) {\n    r = first.readUInt32LE(this.offset);\n    shift = 0;\n    this.offset += 4;\n\n    // First buffer has 3 of 4 bytes\n  } else if (firstHas >= 3) {\n    r = (first.readUInt16LE(this.offset) | first[this.offset + 2] << 16) + this.buffers[1][0] * 0x1000000;\n    shift = 1;\n    this.offset = 1;\n\n    // Slow case: First buffer has 2 of 4 bytes\n  } else if (firstHas >= 2) {\n    r = first.readUInt16LE(this.offset);\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 2;\n    r += this.readUInt16LE() * 0x10000;\n    return r;\n\n    // Slow case: First buffer has 1 of 4 bytes\n  } else {\n    r = first[this.offset];\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 1;\n    r += this.readUInt24LE() * 0x100;\n    return r;\n  }\n  this.size -= 4;\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0) this.buffers = this.buffers.slice(shift);\n  return r;\n};\nOffsetBuffer.prototype.readUInt16BE = function readUInt16BE() {\n  var r = this.readUInt16LE();\n  return (r & 0xff) << 8 | r >> 8;\n};\nOffsetBuffer.prototype.readUInt24BE = function readUInt24BE() {\n  var r = this.readUInt24LE();\n  return (r & 0xff) << 16 | (r >> 8 & 0xff) << 8 | r >> 16;\n};\nOffsetBuffer.prototype.readUInt32BE = function readUInt32BE() {\n  var r = this.readUInt32LE();\n  return ((r & 0xff) << 24 | (r >>> 8 & 0xff) << 16 | (r >>> 16 & 0xff) << 8 | r >>> 24) >>> 0;\n};\n\n// Signed number APIs\n\nfunction signedInt8(num) {\n  if (num >= 0x80) return -(0xff ^ num) - 1;else return num;\n}\nOffsetBuffer.prototype.peekInt8 = function peekInt8() {\n  return signedInt8(this.peekUInt8());\n};\nOffsetBuffer.prototype.readInt8 = function readInt8() {\n  return signedInt8(this.readUInt8());\n};\nfunction signedInt16(num) {\n  if (num >= 0x8000) return -(0xffff ^ num) - 1;else return num;\n}\nOffsetBuffer.prototype.readInt16BE = function readInt16BE() {\n  return signedInt16(this.readUInt16BE());\n};\nOffsetBuffer.prototype.readInt16LE = function readInt16LE() {\n  return signedInt16(this.readUInt16LE());\n};\nfunction signedInt24(num) {\n  if (num >= 0x800000) return -(0xffffff ^ num) - 1;else return num;\n}\nOffsetBuffer.prototype.readInt24BE = function readInt24BE() {\n  return signedInt24(this.readUInt24BE());\n};\nOffsetBuffer.prototype.readInt24LE = function readInt24LE() {\n  return signedInt24(this.readUInt24LE());\n};\nfunction signedInt32(num) {\n  if (num >= 0x80000000) return -(0xffffffff ^ num) - 1;else return num;\n}\nOffsetBuffer.prototype.readInt32BE = function readInt32BE() {\n  return signedInt32(this.readUInt32BE());\n};\nOffsetBuffer.prototype.readInt32LE = function readInt32LE() {\n  return signedInt32(this.readUInt32LE());\n};","map":{"version":3,"names":["Buffer","require","OffsetBuffer","offset","size","buffers","module","exports","prototype","isEmpty","clone","r","slice","toChunks","chunks","off","i","length","buf","push","toString","enc","map","c","join","use","n","data","has","skip","left","shift","copy","target","targetOff","Error","toff","first","toCopy","Math","min","take","out","toOff","startOff","peekUInt8","readUInt8","readUInt16LE","readUInt24LE","firstHas","readUInt32LE","readUInt16BE","readUInt24BE","readUInt32BE","signedInt8","num","peekInt8","readInt8","signedInt16","readInt16BE","readInt16LE","signedInt24","readInt24BE","readInt24LE","signedInt32","readInt32BE","readInt32LE"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/obuf/index.js"],"sourcesContent":["var Buffer = require('buffer').Buffer;\n\nfunction OffsetBuffer() {\n  this.offset = 0;\n  this.size = 0;\n  this.buffers = [];\n}\nmodule.exports = OffsetBuffer;\n\nOffsetBuffer.prototype.isEmpty = function isEmpty() {\n  return this.size === 0;\n};\n\nOffsetBuffer.prototype.clone = function clone(size) {\n  var r = new OffsetBuffer();\n  r.offset = this.offset;\n  r.size = size;\n  r.buffers = this.buffers.slice();\n  return r;\n};\n\nOffsetBuffer.prototype.toChunks = function toChunks() {\n  if (this.size === 0)\n    return [];\n\n  // We are going to slice it anyway\n  if (this.offset !== 0) {\n    this.buffers[0] = this.buffers[0].slice(this.offset);\n    this.offset = 0;\n  }\n\n  var chunks = [ ];\n  var off = 0;\n  for (var i = 0; off <= this.size && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    off += buf.length;\n\n    // Slice off last buffer\n    if (off > this.size) {\n      buf = buf.slice(0, buf.length - (off - this.size));\n      this.buffers[i] = buf;\n    }\n\n    chunks.push(buf);\n  }\n\n  // If some buffers were skipped - trim length\n  if (i < this.buffers.length)\n    this.buffers.length = i;\n\n  return chunks;\n};\n\nOffsetBuffer.prototype.toString = function toString(enc) {\n  return this.toChunks().map(function(c) {\n    return c.toString(enc);\n  }).join('');\n};\n\nOffsetBuffer.prototype.use = function use(buf, off, n) {\n  this.buffers = [ buf ];\n  this.offset = off;\n  this.size = n;\n};\n\nOffsetBuffer.prototype.push = function push(data) {\n  // Ignore empty writes\n  if (data.length === 0)\n    return;\n\n  this.size += data.length;\n  this.buffers.push(data);\n};\n\nOffsetBuffer.prototype.has = function has(n) {\n  return this.size >= n;\n};\n\nOffsetBuffer.prototype.skip = function skip(n) {\n  if (this.size === 0)\n    return;\n\n  this.size -= n;\n\n  // Fast case, skip bytes in a first buffer\n  if (this.offset + n < this.buffers[0].length) {\n    this.offset += n;\n    return;\n  }\n\n  var left = n - (this.buffers[0].length - this.offset);\n  this.offset = 0;\n\n  for (var shift = 1; left > 0 && shift < this.buffers.length; shift++) {\n    var buf = this.buffers[shift];\n    if (buf.length > left) {\n      this.offset = left;\n      break;\n    }\n    left -= buf.length;\n  }\n  this.buffers = this.buffers.slice(shift);\n};\n\nOffsetBuffer.prototype.copy = function copy(target, targetOff, off, n) {\n  if (this.size === 0)\n    return;\n  if (off !== 0)\n    throw new Error('Unsupported offset in .copy()');\n\n  var toff = targetOff;\n  var first = this.buffers[0];\n  var toCopy = Math.min(n, first.length - this.offset);\n  first.copy(target, toff, this.offset, this.offset + toCopy);\n\n  toff += toCopy;\n  var left = n - toCopy;\n  for (var i = 1; left > 0 && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    var toCopy = Math.min(left, buf.length);\n\n    buf.copy(target, toff, 0, toCopy);\n\n    toff += toCopy;\n    left -= toCopy;\n  }\n};\n\nOffsetBuffer.prototype.take = function take(n) {\n  if (n === 0)\n    return new Buffer(0);\n\n  this.size -= n;\n\n  // Fast cases\n  var first = this.buffers[0].length - this.offset;\n  if (first === n) {\n    var r = this.buffers.shift();\n    if (this.offset !== 0) {\n      r = r.slice(this.offset);\n      this.offset = 0;\n    }\n    return r;\n  } else if (first > n) {\n    var r = this.buffers[0].slice(this.offset, this.offset + n);\n    this.offset += n;\n    return r;\n  }\n\n  // Allocate and fill buffer\n  var out = new Buffer(n);\n  var toOff = 0;\n  var startOff = this.offset;\n  for (var i = 0; toOff !== n && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    var toCopy = Math.min(buf.length - startOff, n - toOff);\n\n    buf.copy(out, toOff, startOff, startOff + toCopy);\n    if (startOff + toCopy < buf.length) {\n      this.offset = startOff + toCopy;\n      break;\n    } else {\n      toOff += toCopy;\n      startOff = 0;\n    }\n  }\n\n  this.buffers = this.buffers.slice(i);\n  if (this.buffers.length === 0)\n    this.offset = 0;\n\n  return out;\n};\n\nOffsetBuffer.prototype.peekUInt8 = function peekUInt8() {\n  return this.buffers[0][this.offset];\n};\n\nOffsetBuffer.prototype.readUInt8 = function readUInt8() {\n  this.size -= 1;\n  var first = this.buffers[0];\n  var r = first[this.offset];\n  if (++this.offset === first.length) {\n    this.offset = 0;\n    this.buffers.shift();\n  }\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt16LE = function readUInt16LE() {\n  var first = this.buffers[0];\n  this.size -= 2;\n\n  var r;\n  var shift;\n\n  // Fast case - first buffer has all bytes\n  if (first.length - this.offset >= 2) {\n    r = first.readUInt16LE(this.offset);\n    shift = 0;\n    this.offset += 2;\n\n  // One byte here - one byte there\n  } else {\n    r = first[this.offset] | (this.buffers[1][0] << 8);\n    shift = 1;\n    this.offset = 1;\n  }\n\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0)\n    this.buffers = this.buffers.slice(shift);\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt24LE = function readUInt24LE() {\n  var first = this.buffers[0];\n\n  var r;\n  var shift;\n  var firstHas = first.length - this.offset;\n\n  // Fast case - first buffer has all bytes\n  if (firstHas >= 3) {\n    r = first.readUInt16LE(this.offset) | (first[this.offset + 2] << 16);\n    shift = 0;\n    this.offset += 3;\n\n  // First buffer has 2 of 3 bytes\n  } else if (firstHas >= 2) {\n    r = first.readUInt16LE(this.offset) | (this.buffers[1][0] << 16);\n    shift = 1;\n    this.offset = 1;\n\n  // Slow case: First buffer has 1 of 3 bytes\n  } else {\n    r = first[this.offset];\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 1;\n\n    r |= this.readUInt16LE() << 8;\n    return r;\n  }\n\n  this.size -= 3;\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0)\n    this.buffers = this.buffers.slice(shift);\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt32LE = function readUInt32LE() {\n  var first = this.buffers[0];\n\n  var r;\n  var shift;\n  var firstHas = first.length - this.offset;\n\n  // Fast case - first buffer has all bytes\n  if (firstHas >= 4) {\n    r = first.readUInt32LE(this.offset);\n    shift = 0;\n    this.offset += 4;\n\n  // First buffer has 3 of 4 bytes\n  } else if (firstHas >= 3) {\n    r = (first.readUInt16LE(this.offset) |\n         (first[this.offset + 2] << 16)) +\n        (this.buffers[1][0] * 0x1000000);\n    shift = 1;\n    this.offset = 1;\n\n  // Slow case: First buffer has 2 of 4 bytes\n  } else if (firstHas >= 2) {\n    r = first.readUInt16LE(this.offset);\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 2;\n\n    r += this.readUInt16LE() * 0x10000;\n    return r;\n\n  // Slow case: First buffer has 1 of 4 bytes\n  } else {\n    r = first[this.offset];\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 1;\n\n    r += this.readUInt24LE() * 0x100;\n    return r;\n  }\n\n  this.size -= 4;\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0)\n    this.buffers = this.buffers.slice(shift);\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt16BE = function readUInt16BE() {\n  var r = this.readUInt16LE();\n\n  return ((r & 0xff) << 8) | (r >> 8);\n};\n\nOffsetBuffer.prototype.readUInt24BE = function readUInt24BE() {\n  var r = this.readUInt24LE();\n\n  return ((r & 0xff) << 16) | (((r >> 8) & 0xff) << 8) | (r >> 16);\n};\n\nOffsetBuffer.prototype.readUInt32BE = function readUInt32BE() {\n  var r = this.readUInt32LE();\n\n  return (((r & 0xff) << 24) |\n          (((r >>> 8) & 0xff) << 16) |\n          (((r >>> 16) & 0xff) << 8) |\n          (r >>> 24)) >>> 0;\n};\n\n// Signed number APIs\n\nfunction signedInt8(num) {\n  if (num >= 0x80)\n    return -(0xff ^ num) - 1;\n  else\n    return num;\n}\n\nOffsetBuffer.prototype.peekInt8 = function peekInt8() {\n  return signedInt8(this.peekUInt8());\n};\n\nOffsetBuffer.prototype.readInt8 = function readInt8() {\n  return signedInt8(this.readUInt8());\n};\n\nfunction signedInt16(num) {\n  if (num >= 0x8000)\n    return -(0xffff ^ num) - 1;\n  else\n    return num;\n}\n\nOffsetBuffer.prototype.readInt16BE = function readInt16BE() {\n  return signedInt16(this.readUInt16BE());\n};\n\nOffsetBuffer.prototype.readInt16LE = function readInt16LE() {\n  return signedInt16(this.readUInt16LE());\n};\n\nfunction signedInt24(num) {\n  if (num >= 0x800000)\n    return -(0xffffff ^ num) - 1;\n  else\n    return num;\n}\n\nOffsetBuffer.prototype.readInt24BE = function readInt24BE() {\n  return signedInt24(this.readUInt24BE());\n};\n\nOffsetBuffer.prototype.readInt24LE = function readInt24LE() {\n  return signedInt24(this.readUInt24LE());\n};\n\nfunction signedInt32(num) {\n  if (num >= 0x80000000)\n    return -(0xffffffff ^ num) - 1;\n  else\n    return num;\n}\n\nOffsetBuffer.prototype.readInt32BE = function readInt32BE() {\n  return signedInt32(this.readUInt32BE());\n};\n\nOffsetBuffer.prototype.readInt32LE = function readInt32LE() {\n  return signedInt32(this.readUInt32LE());\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}