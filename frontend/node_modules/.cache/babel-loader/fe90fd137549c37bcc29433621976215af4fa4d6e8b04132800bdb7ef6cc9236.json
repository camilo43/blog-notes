{"ast":null,"code":"/*\n * response-stream.js: A Stream focused on writing any relevant information to\n * a raw http.ServerResponse object.\n *\n * (C) 2011, Charlie Robbins & the Contributors\n * MIT LICENSE\n *\n */\n\nvar util = require('util'),\n  HttpStream = require('./http-stream');\nvar STATUS_CODES = require('http').STATUS_CODES;\n\n//\n// ### function ResponseStream (options)\n//\n//\nvar ResponseStream = module.exports = function (options) {\n  var self = this,\n    key;\n  options = options || {};\n  HttpStream.call(this, options);\n  this.writeable = true;\n  this.response = options.response;\n  if (options.headers) {\n    for (key in options.headers) {\n      this.response.setHeader(key, options.headers[key]);\n    }\n  }\n\n  //\n  // Proxy `statusCode` changes to the actual `response.statusCode`.\n  //\n  Object.defineProperty(this, 'statusCode', {\n    get: function () {\n      return self.response.statusCode;\n    },\n    set: function (value) {\n      self.response.statusCode = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  if (this.response) {\n    this._headers = this.response._headers = this.response._headers || {};\n\n    // Patch to node core\n    this.response._headerNames = this.response._headerNames || {};\n\n    //\n    // Proxy to emit \"header\" event\n    //\n    this._renderHeaders = this.response._renderHeaders;\n    this.response._renderHeaders = function () {\n      if (!self._emittedHeader) {\n        self._emittedHeader = true;\n        self.headerSent = true;\n        self._header = true;\n        self.emit('header');\n      }\n      return self._renderHeaders.call(self.response);\n    };\n  }\n};\nutil.inherits(ResponseStream, HttpStream);\nResponseStream.prototype.writeHead = function (statusCode, statusMessage, headers) {\n  if (typeof statusMessage === 'string') {\n    this.response.statusMessage = statusMessage;\n  } else {\n    this.response.statusMessage = this.response.statusMessage || STATUS_CODES[statusCode] || 'unknown';\n    headers = statusMessage;\n  }\n  this.response.statusCode = statusCode;\n  if (headers) {\n    var keys = Object.keys(headers);\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i];\n      if (k) this.response.setHeader(k, headers[k]);\n    }\n  }\n};\n\n//\n// Create pass-thru for the necessary\n// `http.ServerResponse` methods.\n//\n['setHeader', 'getHeader', 'removeHeader', '_implicitHeader', 'addTrailers'].forEach(function (method) {\n  ResponseStream.prototype[method] = function () {\n    return this.response[method].apply(this.response, arguments);\n  };\n});\nResponseStream.prototype.json = function (obj) {\n  if (!this.response.writable) {\n    return;\n  }\n  if (typeof obj === 'number') {\n    this.response.statusCode = obj;\n    obj = arguments[1];\n  }\n  this.modified = true;\n  if (!this.response._header && this.response.getHeader('content-type') !== 'application/json') {\n    this.response.setHeader('content-type', 'application/json');\n  }\n  this.end(obj ? JSON.stringify(obj) : '');\n};\nResponseStream.prototype.html = function (str) {\n  if (!this.response.writable) {\n    return;\n  }\n  if (typeof str === 'number') {\n    this.response.statusCode = str;\n    str = arguments[1];\n  }\n  this.modified = true;\n  if (!this.response._header && this.response.getHeader('content-type') !== 'text/html') {\n    this.response.setHeader('content-type', 'text/html');\n  }\n  this.end(str ? str : '');\n};\nResponseStream.prototype.text = function (str) {\n  if (!this.response.writable) {\n    return;\n  }\n  if (typeof str === 'number') {\n    this.response.statusCode = str;\n    str = arguments[1];\n  }\n  this.modified = true;\n  if (!this.response._header && this.response.getHeader('content-type') !== 'text/plain') {\n    this.response.setHeader('content-type', 'text/plain');\n  }\n  this.end(str ? str : '');\n};\nResponseStream.prototype.end = function (data) {\n  if (data && this.writable) {\n    this.emit('data', data);\n  }\n  this.modified = true;\n  this.emit('end');\n};\nResponseStream.prototype.pipe = function () {\n  var self = this,\n    dest;\n  self.dest = dest = HttpStream.prototype.pipe.apply(self, arguments);\n  dest.on('drain', function () {\n    self.emit('drain');\n  });\n  return dest;\n};\nResponseStream.prototype.write = function (data) {\n  this.modified = true;\n  if (this.writable) {\n    return this.dest.write(data);\n  }\n};\nResponseStream.prototype.redirect = function (path, status) {\n  var url = '';\n  if (~path.indexOf('://')) {\n    url = path;\n  } else {\n    url += this.req.connection.encrypted ? 'https://' : 'http://';\n    url += this.req.headers.host;\n    url += path[0] === '/' ? path : '/' + path;\n  }\n  this.res.writeHead(status || 302, {\n    'Location': url\n  });\n  this.end();\n};","map":{"version":3,"names":["util","require","HttpStream","STATUS_CODES","ResponseStream","module","exports","options","self","key","call","writeable","response","headers","setHeader","Object","defineProperty","get","statusCode","set","value","enumerable","configurable","_headers","_headerNames","_renderHeaders","_emittedHeader","headerSent","_header","emit","inherits","prototype","writeHead","statusMessage","keys","i","length","k","forEach","method","apply","arguments","json","obj","writable","modified","getHeader","end","JSON","stringify","html","str","text","data","pipe","dest","on","write","redirect","path","status","url","indexOf","req","connection","encrypted","host","res"],"sources":["/Users/juancvegao/Documents/PROGRAMMING/REACT/ejerciciosUniversidad/notes_github/frontend/node_modules/union/lib/response-stream.js"],"sourcesContent":["/*\n * response-stream.js: A Stream focused on writing any relevant information to\n * a raw http.ServerResponse object.\n *\n * (C) 2011, Charlie Robbins & the Contributors\n * MIT LICENSE\n *\n */\n\nvar util = require('util'),\n    HttpStream = require('./http-stream');\n\nvar STATUS_CODES = require('http').STATUS_CODES;\n\n//\n// ### function ResponseStream (options)\n//\n//\nvar ResponseStream = module.exports = function (options) {\n  var self = this,\n      key;\n\n  options = options || {};\n  HttpStream.call(this, options);\n\n  this.writeable = true;\n  this.response = options.response;\n\n  if (options.headers) {\n    for (key in options.headers) {\n      this.response.setHeader(key, options.headers[key]);\n    }\n  }\n\n  //\n  // Proxy `statusCode` changes to the actual `response.statusCode`.\n  //\n  Object.defineProperty(this, 'statusCode', {\n    get: function () {\n      return self.response.statusCode;\n    },\n    set: function (value) {\n      self.response.statusCode = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  if (this.response) {\n    this._headers = this.response._headers = this.response._headers || {};\n\n    // Patch to node core\n    this.response._headerNames = this.response._headerNames || {};\n\n    //\n    // Proxy to emit \"header\" event\n    //\n    this._renderHeaders = this.response._renderHeaders;\n    this.response._renderHeaders = function () {\n      if (!self._emittedHeader) {\n        self._emittedHeader = true;\n        self.headerSent = true;\n        self._header = true;\n        self.emit('header');\n      }\n\n      return self._renderHeaders.call(self.response);\n    };\n  }\n};\n\nutil.inherits(ResponseStream, HttpStream);\n\nResponseStream.prototype.writeHead = function (statusCode, statusMessage, headers) {\n  if (typeof statusMessage === 'string') {\n    this.response.statusMessage = statusMessage;\n  } else {\n    this.response.statusMessage = this.response.statusMessage\n      || STATUS_CODES[statusCode] || 'unknown';\n    headers = statusMessage;\n  }\n\n  this.response.statusCode = statusCode;\n\n  if (headers) {\n    var keys = Object.keys(headers);\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i];\n      if (k) this.response.setHeader(k, headers[k]);\n    }\n  }\n};\n\n//\n// Create pass-thru for the necessary\n// `http.ServerResponse` methods.\n//\n['setHeader', 'getHeader', 'removeHeader', '_implicitHeader', 'addTrailers'].forEach(function (method) {\n  ResponseStream.prototype[method] = function () {\n    return this.response[method].apply(this.response, arguments);\n  };\n});\n\nResponseStream.prototype.json = function (obj) {\n  if (!this.response.writable) {\n    return;\n  }\n\n  if (typeof obj === 'number') {\n    this.response.statusCode = obj;\n    obj = arguments[1];\n  }\n\n  this.modified = true;\n\n  if (!this.response._header && this.response.getHeader('content-type') !== 'application/json') {\n    this.response.setHeader('content-type', 'application/json');\n  }\n\n  this.end(obj ? JSON.stringify(obj) : '');\n};\n\nResponseStream.prototype.html = function (str) {\n  if (!this.response.writable) {\n    return;\n  }\n\n  if (typeof str === 'number') {\n    this.response.statusCode = str;\n    str = arguments[1];\n  }\n\n  this.modified = true;\n\n  if (!this.response._header && this.response.getHeader('content-type') !== 'text/html') {\n    this.response.setHeader('content-type', 'text/html');\n  }\n\n  this.end(str ? str: '');\n};\n\nResponseStream.prototype.text = function (str) {\n  if (!this.response.writable) {\n    return;\n  }\n\n  if (typeof str === 'number') {\n    this.response.statusCode = str;\n    str = arguments[1];\n  }\n\n  this.modified = true;\n\n  if (!this.response._header && this.response.getHeader('content-type') !== 'text/plain') {\n    this.response.setHeader('content-type', 'text/plain');\n  }\n\n  this.end(str ? str: '');\n};\n\nResponseStream.prototype.end = function (data) {\n  if (data && this.writable) {\n    this.emit('data', data);\n  }\n\n  this.modified = true;\n  this.emit('end');\n};\n\nResponseStream.prototype.pipe = function () {\n  var self = this, \n      dest;\n\n  self.dest = dest = HttpStream.prototype.pipe.apply(self, arguments);\n  \n  dest.on('drain', function() {\n    self.emit('drain')\n  })\n  return dest;\n};\n\nResponseStream.prototype.write = function (data) {\n  this.modified = true;\n\n  if (this.writable) {\n    return this.dest.write(data);\n  }\n};\n\nResponseStream.prototype.redirect = function (path, status) {\n  var url = '';\n\n  if (~path.indexOf('://')) {\n    url = path;\n  } else {\n    url += this.req.connection.encrypted ? 'https://' : 'http://';\n    url += this.req.headers.host;\n    url += (path[0] === '/') ? path : '/' + path;\n  }\n\n  this.res.writeHead(status || 302, { 'Location': url });\n  this.end();\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}